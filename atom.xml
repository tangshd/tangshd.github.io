<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>唐某某的blog</title>
  
  <subtitle>一切都是代码</subtitle>
  <link href="https://engining.net/atom.xml" rel="self"/>
  
  <link href="https://engining.net/"/>
  <updated>2022-07-24T07:54:53.551Z</updated>
  <id>https://engining.net/</id>
  
  <author>
    <name>tangshd</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>post title with whitespace</title>
    <link href="https://engining.net/2022/07/24/post-title-with-whitespace/"/>
    <id>https://engining.net/2022/07/24/post-title-with-whitespace/</id>
    <published>2022-07-24T07:54:53.000Z</published>
    <updated>2022-07-24T07:54:53.551Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://engining.net/2022/07/24/hello-world/"/>
    <id>https://engining.net/2022/07/24/hello-world/</id>
    <published>2022-07-24T07:30:56.712Z</published>
    <updated>2022-07-24T07:30:56.712Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>mysql 双主同步</title>
    <link href="https://engining.net/2021/09/27/2018-02-09-MySQL%E5%8F%8C%E4%B8%BB%E5%90%8C%E6%AD%A5%E8%AE%BE%E7%BD%AE/"/>
    <id>https://engining.net/2021/09/27/2018-02-09-MySQL%E5%8F%8C%E4%B8%BB%E5%90%8C%E6%AD%A5%E8%AE%BE%E7%BD%AE/</id>
    <published>2021-09-27T03:01:02.448Z</published>
    <updated>2021-09-27T03:01:02.448Z</updated>
    
    <content type="html"><![CDATA[<p>本文转载自<a href="https://github.com/sxyx2008/DevArticles">https://github.com/sxyx2008/DevArticles</a></p><blockquote><p>Ubuntu 12.04.5</p></blockquote><blockquote><p>MySQL 5.5.47</p></blockquote><blockquote><p>master1 192.168.64.131</p></blockquote><blockquote><p>master2 192.168.64.132</p></blockquote><h3 id="1-修改mysql配置文件、创建帐号并授权"><a href="#1-修改mysql配置文件、创建帐号并授权" class="headerlink" title="1. 修改mysql配置文件、创建帐号并授权"></a>1. 修改mysql配置文件、创建帐号并授权</h3><h4 id="1-1-修改master1上mysql配置文件my-conf"><a href="#1-1-修改master1上mysql配置文件my-conf" class="headerlink" title="1.1 修改master1上mysql配置文件my.conf"></a>1.1 修改master1上mysql配置文件my.conf</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">server-id           = 131#数据库ID</span><br><span class="line">log_bin             = /var/log/mysql/mysql-bin.log#启用二进制日志 如果没有var/log/mysql这个目录，则需要创建.</span><br><span class="line">#binlog-do-db= tudou1#需要同步的数据库,这里同步tudou1和tudou2两个数据库</span><br><span class="line">#binlog-do-db= tudou2</span><br><span class="line">binlog-ignore-db= mysql#忽略同步的数据库</span><br><span class="line">log-slave-updates#把从库的写操作记录到binlog中 （缺少之后，双主创建失败）</span><br><span class="line">expire_logs_days= 365#日志文件过期天数，默认是 0，表示不过期</span><br><span class="line">auto-increment-increment= 2#设定为主服务器的数量，防止auto_increment字段重复</span><br><span class="line">auto-increment-offset= 1#自增长字段的初始值，在多台master环境下，不会出现自增长ID重复</span><br></pre></td></tr></table></figure><h5 id="创建帐号密码并授权"><a href="#创建帐号密码并授权" class="headerlink" title="创建帐号密码并授权"></a>创建帐号密码并授权</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GRANT REPLICATION SLAVE ON *.* TO &#x27;repuser&#x27;@&#x27;192.168.64.132&#x27; IDENTIFIED BY &#x27;repuser&#x27;;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><h5 id="在192-168-64-132测试repuser是否能登录192-168-64-131上的数据库"><a href="#在192-168-64-132测试repuser是否能登录192-168-64-131上的数据库" class="headerlink" title="在192.168.64.132测试repuser是否能登录192.168.64.131上的数据库"></a>在192.168.64.132测试repuser是否能登录192.168.64.131上的数据库</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@192.168.64.132:~/apps$ mysql -urepuser -prepuser -h192.168.64.131</span><br></pre></td></tr></table></figure><h4 id="1-2-修改master2上mysql配置文件my-conf"><a href="#1-2-修改master2上mysql配置文件my-conf" class="headerlink" title="1.2 修改master2上mysql配置文件my.conf"></a>1.2 修改master2上mysql配置文件my.conf</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">server-id           = 132#数据库ID</span><br><span class="line">log_bin             = /var/log/mysql/mysql-bin.log#启用二进制日志 如果没有var/log/mysql这个目录，则需要创建.</span><br><span class="line">#binlog-do-db= tudou1#需要同步的数据库,这里同步tudou1和tudou2两个数据库</span><br><span class="line">#binlog-do-db= tudou2</span><br><span class="line">binlog-ignore-db= mysql#忽略同步的数据库</span><br><span class="line">log-slave-updates#把从库的写操作记录到binlog中 （缺少之后，双主创建失败）</span><br><span class="line">expire_logs_days= 365#日志文件过期天数，默认是 0，表示不过期</span><br><span class="line">auto-increment-increment= 2#设定为主服务器的数量，防止auto_increment字段重复</span><br><span class="line">auto-increment-offset= 1#自增长字段的初始值，在多台master环境下，不会出现自增长ID重复</span><br></pre></td></tr></table></figure><h5 id="创建帐号密码并授权-1"><a href="#创建帐号密码并授权-1" class="headerlink" title="创建帐号密码并授权"></a>创建帐号密码并授权</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GRANT REPLICATION SLAVE ON *.* TO &#x27;repuser&#x27;@&#x27;192.168.64.131&#x27; IDENTIFIED BY &#x27;repuser&#x27;;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><h5 id="在192-168-64-131测试repuser是否能登录192-168-64-132上的数据库"><a href="#在192-168-64-131测试repuser是否能登录192-168-64-132上的数据库" class="headerlink" title="在192.168.64.131测试repuser是否能登录192.168.64.132上的数据库"></a>在192.168.64.131测试repuser是否能登录192.168.64.132上的数据库</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@192.168.64.131:~/apps$ mysql -urepuser -prepuser -h192.168.64.132</span><br></pre></td></tr></table></figure><p><em>注意：</em></p><ul><li><p>log-slave-updates 表示把从库的写操作记录到binlog中，缺少之后，双主创建失败。双主同步时该项必须有</p></li><li><p>binlog-do-db 表示需要同步的数据库可出现多个，上述配置中注释掉了，若开启该配置项则格式见上述配置</p></li><li><p>binlog-ignore-db 表示忽略同步的数据库</p></li></ul><h3 id="2-配置双主同步"><a href="#2-配置双主同步" class="headerlink" title="2. 配置双主同步"></a>2. 配置双主同步</h3><h4 id="查看master状态"><a href="#查看master状态" class="headerlink" title="查看master状态"></a>查看master状态</h4><p>master1中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show master status;</span><br><span class="line">+------------------+----------+--------------+------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |</span><br><span class="line">+------------------+----------+--------------+------------------+</span><br><span class="line">| mysql-bin.000001 |      107 |              | mysql            |</span><br><span class="line">+------------------+----------+--------------+------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>master2中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show master status;</span><br><span class="line">+------------------+----------+--------------+------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |</span><br><span class="line">+------------------+----------+--------------+------------------+</span><br><span class="line">| mysql-bin.000001 |      107 |              | mysql            |</span><br><span class="line">+------------------+----------+--------------+------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><h4 id="设置master1从master2同步"><a href="#设置master1从master2同步" class="headerlink" title="设置master1从master2同步"></a>设置master1从master2同步</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CHANGE MASTER TO MASTER_HOST=&#x27;192.168.64.132&#x27;,MASTER_PORT=3306,MASTER_USER=&#x27;repuser&#x27;,MASTER_PASSWORD=&#x27;repuser&#x27;,MASTER_LOG_FILE=&#x27;mysql-bin.000001&#x27;,MASTER_LOG_POS=107;</span><br><span class="line">mysql&gt; SHOW SLAVE STATUS\G</span><br><span class="line">mysql&gt; START SLAVE;</span><br><span class="line">mysql&gt; SHOW SLAVE STATUS\G</span><br></pre></td></tr></table></figure><p>如出现以下两项，则说明配置成功！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Slave_IO_Running: Yes</span><br><span class="line">Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure><h4 id="设置master2从master1同步"><a href="#设置master2从master1同步" class="headerlink" title="设置master2从master1同步"></a>设置master2从master1同步</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CHANGE MASTER TO MASTER_HOST=&#x27;192.168.64.131&#x27;,MASTER_PORT=3306,MASTER_USER=&#x27;repuser&#x27;,MASTER_PASSWORD=&#x27;repuser&#x27;,MASTER_LOG_FILE=&#x27;mysql-bin.000001&#x27;,MASTER_LOG_POS=107;</span><br><span class="line">mysql&gt; SHOW SLAVE STATUS\G</span><br><span class="line">mysql&gt; START SLAVE;</span><br><span class="line">mysql&gt; SHOW SLAVE STATUS\G</span><br></pre></td></tr></table></figure><p>如出现以下两项，则说明配置成功！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Slave_IO_Running: Yes</span><br><span class="line">Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure><h3 id="3-双主同步测试"><a href="#3-双主同步测试" class="headerlink" title="3 双主同步测试"></a>3 双主同步测试</h3><p>进入master1 mysql 数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;  create database crm;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;  use crm;</span><br><span class="line">Database changed</span><br><span class="line">mysql&gt;  create table employee(id int auto_increment,name varchar(10),primary key(id));</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;  insert into employee(name) values(&#x27;a&#x27;);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;  insert into employee(name) values(&#x27;b&#x27;);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;  insert into employee(name) values(&#x27;c&#x27;);</span><br><span class="line">Query OK, 1 row affected (0.06 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;  select * from employee;</span><br><span class="line">+----+------+</span><br><span class="line">| id | name |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 | a    |</span><br><span class="line">|  3 | b    |</span><br><span class="line">|  5 | c    |</span><br><span class="line">+----+------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>进入master2，查看是否有crm这个数据库和employee表。</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;  show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| crm                |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">+--------------------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;  use crm;</span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt;  show tables;</span><br><span class="line">+---------------+</span><br><span class="line">| Tables_in_crm |</span><br><span class="line">+---------------+</span><br><span class="line">| employee      |</span><br><span class="line">+---------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;  select * from employee;</span><br><span class="line">+----+------+</span><br><span class="line">| id | name |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 | a    |</span><br><span class="line">|  3 | b    |</span><br><span class="line">|  5 | c    |</span><br><span class="line">+----+------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;  insert into employee(name) values(&#x27;d&#x27;);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;  select * from employee;</span><br><span class="line">+----+------+</span><br><span class="line">| id | name |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 | a    |</span><br><span class="line">|  3 | b    |</span><br><span class="line">|  5 | c    |</span><br><span class="line">|  7 | d    |</span><br><span class="line">+----+------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>在master1的中查看是否有刚刚在master2中插入的数据。</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> mysql&gt;  select * from employee;</span><br><span class="line">+----+------+</span><br><span class="line">| id | name |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 | a    |</span><br><span class="line">|  3 | b    |</span><br><span class="line">|  5 | c    |</span><br><span class="line">|  7 | d    |</span><br><span class="line">+----+------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文转载自&lt;a href=&quot;https://github.com/sxyx2008/DevArticles&quot;&gt;https://github.com/sxyx2008/DevArticles&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ubuntu 12.04.5&lt;/p&gt;</summary>
      
    
    
    
    
    <category term="mysql master-master binlog" scheme="https://engining.net/tags/mysql-master-master-binlog/"/>
    
  </entry>
  
  <entry>
    <title>云原生、微服务、servicemesh的关系</title>
    <link href="https://engining.net/2018/12/25/2018-12-25-%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BE%AE%E6%9C%8D%E5%8A%A1servicemesh%E7%9A%84%E5%85%B3%E7%B3%BB/"/>
    <id>https://engining.net/2018/12/25/2018-12-25-%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BE%AE%E6%9C%8D%E5%8A%A1servicemesh%E7%9A%84%E5%85%B3%E7%B3%BB/</id>
    <published>2018-12-24T16:00:00.000Z</published>
    <updated>2021-09-27T03:01:02.448Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>当下，云原生应用发展的如火如荼，各线下沙龙活动、线上知识文章也层出不穷？那什么是Cloud Native（云原生），它和微服务、容器化以及ServiceMesh有什么关系？</p><h2 id="先贴一张思维导图"><a href="#先贴一张思维导图" class="headerlink" title="先贴一张思维导图"></a>先贴一张思维导图</h2><blockquote><p>参考资料：<a href="https://jimmysong.io/">https://jimmysong.io</a> <a href="http://www.servicemesher.com/">http://www.servicemesher.com/</a></p></blockquote>  <figure>  <a><img src="/uploads/20181225/001.png"></a>  </figure><h2 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h2><blockquote><p>容器——Cloud Native的基石</p></blockquote><h2 id="K8S"><a href="#K8S" class="headerlink" title="K8S"></a>K8S</h2><h2 id="微服务"><a href="#微服务" class="headerlink" title="微服务"></a>微服务</h2><h2 id="Cloud-Native（云原生）"><a href="#Cloud-Native（云原生）" class="headerlink" title="Cloud Native（云原生）"></a>Cloud Native（云原生）</h2><h2 id="Service-Mesh（服务网格）"><a href="#Service-Mesh（服务网格）" class="headerlink" title="Service Mesh（服务网格）"></a>Service Mesh（服务网格）</h2><h2 id="实际业务中的落地"><a href="#实际业务中的落地" class="headerlink" title="实际业务中的落地"></a>实际业务中的落地</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;当下，云原生应用发展的如火如荼，各线下沙龙活动、线上知识文章也层出不穷？那什么是Cloud Native（云原生），它和微服务、容器化以及S</summary>
      
    
    
    
    
    <category term="云原生" scheme="https://engining.net/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
    <category term="微服务" scheme="https://engining.net/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
    <category term="servicemesh" scheme="https://engining.net/tags/servicemesh/"/>
    
    <category term="容器化" scheme="https://engining.net/tags/%E5%AE%B9%E5%99%A8%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>阿里云日志服务采集k8s日志并实现livetail功能</title>
    <link href="https://engining.net/2018/11/15/2018-11-15-%E9%98%BF%E9%87%8C%E4%BA%91%E6%97%A5%E5%BF%97%E6%9C%8D%E5%8A%A1%E9%87%87%E9%9B%86k8s%E6%97%A5%E5%BF%97%E5%B9%B6%E5%AE%9E%E7%8E%B0livetail%E5%8A%9F%E8%83%BD/"/>
    <id>https://engining.net/2018/11/15/2018-11-15-%E9%98%BF%E9%87%8C%E4%BA%91%E6%97%A5%E5%BF%97%E6%9C%8D%E5%8A%A1%E9%87%87%E9%9B%86k8s%E6%97%A5%E5%BF%97%E5%B9%B6%E5%AE%9E%E7%8E%B0livetail%E5%8A%9F%E8%83%BD/</id>
    <published>2018-11-14T16:00:00.000Z</published>
    <updated>2021-09-27T03:01:02.448Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>目前的项目日志都是通过Logtail直接采集，投递到OSS持久化，同时可以通过阿里云日志服务、devops自建平台进行查看（虽然大部分人是直接登录ECS查看&#x3D;。&#x3D;）<br>在开始进行容器化之后，同样遇到日志的问题，目前的解决方案是阿里云日志服务持久化和展现格式化后的日志、使用rancher查看实时日志<br>但是之前由于rancher平台出现一些问题，导致不能及时查看日志的情况，在这个背景下对阿里云日志服务采集k8s日志和livetail进行搭建并调研词方案是否可行</p><h2 id="简介（转自阿里云官方文档）"><a href="#简介（转自阿里云官方文档）" class="headerlink" title="简介（转自阿里云官方文档）"></a>简介（转自阿里云官方文档）</h2><blockquote><p>日志服务（Log Service，简称 LOG）是针对日志类数据的一站式服务，在阿里巴巴集团经历大量大数据场景锤炼而成。您无需开发就能快捷完成日志数据采集、消费、投递以及查询分析等功能，提升运维、运营效率，建立 DT 时代海量日志处理能力。</p></blockquote><h2 id="kubernetes日志采集组件安装"><a href="#kubernetes日志采集组件安装" class="headerlink" title="kubernetes日志采集组件安装"></a>kubernetes日志采集组件安装</h2><h3 id="安装Logtail"><a href="#安装Logtail" class="headerlink" title="安装Logtail"></a>安装Logtail</h3><ul><li><p>进入阿里云容器服务找到集群id</p>  <figure>  <a><img src="/uploads/20181115/001.jpeg"></a>  </figure></li><li><p>通过ssh登录master节点，或者任意安装了kubectl并配置了该集群kubeconfig的服务器</p></li><li><p>执行命令，将${your_k8s_cluster_id}替换为集群id</p></li></ul>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://logtail-release-cn-hangzhou.oss-cn-hangzhou.aliyuncs.com/kubernetes/alicloud-log-k8s-install.sh -O alicloud-log-k8s-install.sh; chmod 744 ./alicloud-log-k8s-install.sh; sh ./alicloud-log-k8s-install.sh $&#123;your_k8s_cluster_id&#125;</span><br></pre></td></tr></table></figure><pre><code>Project k8s-log-$&#123;your_k8s_cluster_id&#125;下会自动创建名为config-operation-log的Logstore，用于存储alibaba-log-controller的运行日志。请勿删除此Logstore，否则无法为alibaba-log-controller排查问题。若您需要将日志采集到已有的Project，请执行安装命令sh ./alicloud-log-k8s-install.sh$&#123;your_k8s_cluster_id&#125; $&#123;your_project_name&#125; ，并确保日志服务Project和您的Kubernetes集群在同一地域。</code></pre><ul><li>该条命令其实就是执行了一个shell脚本，使用helm安装了采集kubernetes集群日志的组件</li></ul>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">  #!/bin/bash</span><br><span class="line"> </span><br><span class="line">if [ $# -eq 0 ] ; then</span><br><span class="line">    echo &quot;[Invalid Param], use sudo ./install-k8s-log.sh &#123;your-k8s-cluster-id&#125;&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line"> </span><br><span class="line">clusterName=$(echo $1 | tr &#x27;[A-Z]&#x27; &#x27;[a-z]&#x27;)</span><br><span class="line">curl --connect-timeout 5  http://100.100.100.200/latest/meta-data/region-id</span><br><span class="line"> </span><br><span class="line">if [ $? != 0 ]; then</span><br><span class="line">    echo &quot;[FAIL] ECS meta server connect fail, only support alibaba cloud k8s service&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line"> </span><br><span class="line">regionId=`curl http://100.100.100.200/latest/meta-data/region-id`</span><br><span class="line">aliuid=`curl http://100.100.100.200/latest/meta-data/owner-account-id`</span><br><span class="line"> </span><br><span class="line">helmPackageUrl=&quot;http://logtail-release-$regionId.oss-$regionId.aliyuncs.com/kubernetes/alibaba-cloud-log.tgz&quot;</span><br><span class="line">wget $helmPackageUrl -O alibaba-cloud-log.tgz</span><br><span class="line">if [ $? != 0 ]; then</span><br><span class="line">    echo &quot;[FAIL] download alibaba-cloud-log.tgz from $helmPackageUrl failed&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line"> </span><br><span class="line">project=&quot;k8s-log-&quot;$clusterName</span><br><span class="line">if [ $# -ge 2 ]; then</span><br><span class="line">    project=$2</span><br><span class="line">fi</span><br><span class="line"> </span><br><span class="line">echo [INFO] your k8s is using project : $project</span><br><span class="line"> </span><br><span class="line">helm install alibaba-cloud-log.tgz --name alibaba-log-controller \</span><br><span class="line">    --set ProjectName=$project \</span><br><span class="line">    --set RegionId=$regionId \</span><br><span class="line">    --set InstallParam=$regionId \</span><br><span class="line">    --set MachineGroupId=&quot;k8s-group-&quot;$clusterName \</span><br><span class="line">    --set Endpoint=$regionId&quot;-intranet.log.aliyuncs.com&quot; \</span><br><span class="line">    --set AlibabaCloudUserId=&quot;:&quot;$aliuid \</span><br><span class="line">    --set LogtailImage.Repository=&quot;registry.$regionId.aliyuncs.com/log-service/logtail&quot; \</span><br><span class="line">    --set ControllerImage.Repository=&quot;registry.$regionId.aliyuncs.com/log-service/alibabacloud-log-controller&quot;</span><br><span class="line"> </span><br><span class="line">installRst=$?</span><br><span class="line"> </span><br><span class="line">if [ $installRst -eq 0 ]; then</span><br><span class="line">    echo &quot;[SUCCESS] install helm package : alibaba-log-controller success.&quot;</span><br><span class="line">    exit 0</span><br><span class="line">else</span><br><span class="line">    echo &quot;[FAIL] install helm package failed, errno &quot; $installRst</span><br><span class="line">    exit 0</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><ul><li>命令执行后，会在kubernetes集群中的每个节点运行一个日志采集的pod：logatail-ds，该pod位于kube-system  <figure>  <a><img src="/uploads/20181115/002.jpeg"></a>  </figure></li><li>安装完成后，可使用以下命令来查看pod状态，若状态全部成功后，则表示安装完成</li></ul>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">[root@izuf6d75c59ll4woscqmh5z ~]# helm status alibaba-log-controller</span><br><span class="line">LAST DEPLOYED: Thu Nov 22 15:09:35 2018</span><br><span class="line">NAMESPACE: default</span><br><span class="line">STATUS: DEPLOYED</span><br><span class="line"> </span><br><span class="line">RESOURCES:</span><br><span class="line">==&gt; v1/ServiceAccount</span><br><span class="line">NAME                    SECRETS  AGE</span><br><span class="line">alibaba-log-controller  1        6d</span><br><span class="line"> </span><br><span class="line">==&gt; v1beta1/CustomResourceDefinition</span><br><span class="line">NAME                                   AGE</span><br><span class="line">aliyunlogconfigs.log.alibabacloud.com  6d</span><br><span class="line"> </span><br><span class="line">==&gt; v1beta1/ClusterRole</span><br><span class="line">alibaba-log-controller  6d</span><br><span class="line"> </span><br><span class="line">==&gt; v1beta1/ClusterRoleBinding</span><br><span class="line">NAME                    AGE</span><br><span class="line">alibaba-log-controller  6d</span><br><span class="line"> </span><br><span class="line">==&gt; v1beta1/DaemonSet</span><br><span class="line">NAME        DESIRED  CURRENT  READY  UP-TO-DATE  AVAILABLE  NODE SELECTOR  AGE</span><br><span class="line">logtail-ds  16       16       16     16          16         &lt;none&gt;         6d</span><br><span class="line"> </span><br><span class="line">==&gt; v1beta1/Deployment</span><br><span class="line">NAME                    DESIRED  CURRENT  UP-TO-DATE  AVAILABLE  AGE</span><br><span class="line">alibaba-log-controller  1        1        1           1          6d</span><br><span class="line"> </span><br><span class="line">==&gt; v1/Pod(related)</span><br><span class="line">NAME                                     READY  STATUS   RESTARTS  AGE</span><br><span class="line">logtail-ds-2fqs4                         1/1    Running  0         6d</span><br><span class="line">logtail-ds-4bz7w                         1/1    Running  1         6d</span><br><span class="line">logtail-ds-6vg88                         1/1    Running  0         6d</span><br><span class="line">logtail-ds-7tp6v                         1/1    Running  0         6d</span><br><span class="line">logtail-ds-9575c                         1/1    Running  0         6d</span><br><span class="line">logtail-ds-bgq84                         1/1    Running  0         6d</span><br><span class="line">logtail-ds-kdlhr                         1/1    Running  0         6d</span><br><span class="line">logtail-ds-lknxw                         1/1    Running  0         6d</span><br><span class="line">logtail-ds-pdxfk                         1/1    Running  0         6d</span><br><span class="line">logtail-ds-pf4dz                         1/1    Running  0         6d</span><br><span class="line">logtail-ds-rzsnw                         1/1    Running  0         6d</span><br><span class="line">logtail-ds-sqhbv                         1/1    Running  0         6d</span><br><span class="line">logtail-ds-vvtwn                         1/1    Running  0         6d</span><br><span class="line">logtail-ds-wwmhg                         1/1    Running  0         6d</span><br><span class="line">logtail-ds-xbp4j                         1/1    Running  0         6d</span><br><span class="line">logtail-ds-zpld9                         1/1    Running  0         6d</span><br><span class="line">alibaba-log-controller-85f8fbb498-nzhc8  1/1    Running  0         6d</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>### 配置日志组件展示- 在集群内安装好日志组件后，登录阿里云日志服务控制台，就会发现有一个新的project，名称为k8s-log-&#123;集群id&#125;  &lt;figure&gt;</code></pre><p>  <a><img src="/uploads/20181115/003.png"></a><br>  </figure></p><ul><li><p>创建Logstore</p>   <figure>  <a><img src="/uploads/20181115/004.png"></a>  </figure></li><li><p>配置Logstore，设置logstore名称、配置日志数据保留时间</p>   <figure>  <a><img src="/uploads/20181115/005.png"></a>  </figure></li><li><p>数据导入</p>  <figure>  <a><img src="/uploads/20181115/006.png"></a>  </figure></li><li><p>选择数据类型中选择docker标准输出</p>  <figure>  <a><img src="/uploads/20181115/007.png"></a>  </figure></li><li><p>数据源配置，这里可以使用默认的</p>  <figure>  <a><img src="/uploads/20181115/008.png"></a>  </figure></li><li><p>选择数据源</p>  <figure>  <a><img src="/uploads/20181115/009.png"></a>  </figure></li><li><p>配置好之后等待1-2分钟，日志就会进来了</p> <figure>  <a><img src="/uploads/20181115/010.png"></a>  </figure></li><li><p>为了快速查询和过滤，需要配置索引</p></li></ul> <figure>  <a><img src="/uploads/20181115/011.png"></a>  </figure><ul><li>添加容器名称、命名空间、pod名称作为索引（后续使用livetail需要） <figure>  <a><img src="/uploads/20181115/012.png"></a>  </figure></li><li>这样就完成了一个k8s集群日志采集和展示的基本流程了</li></ul><h2 id="livetail功能使用"><a href="#livetail功能使用" class="headerlink" title="livetail功能使用"></a>livetail功能使用</h2><h3 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h3><pre><code>&gt; 在线上运维的场景中，往往需要对日志队列中进入的数据进行实时监控，从最新的日志数据中提取出关键的信息进而快速地分析出异常原因。在传统的运维方式中，如果需要对日志文件进行实时监控，需要到服务器上对日志文件执行命令tail -f，如果实时监控的日志信息不够直观，可以加上grep或者grep -v进行关键词过滤。日志服务在控制台提供了日志数据实时监控的交互功能LiveTail，针对线上日志进行实时监控分析，减轻运维压力。</code></pre><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><ul><li>这里选择来源类型为kubernetes，命名空间、pod名称、容器名称为上一步新建的3个索引的内容，过滤关键字的功劳与tail命令后加的grep命令是一样的，用于关键词过滤</li></ul>   <figure>  <a><img src="/uploads/20181115/013.png"></a>  </figure><ul><li>点击开启livetail，这时就有实时日志展示出来了 <figure>  <a><img src="/uploads/20181115/014.png"></a>  </figure></li></ul><h2 id="问题与短板"><a href="#问题与短板" class="headerlink" title="问题与短板"></a>问题与短板</h2><p>阿里云日志服务的livetail功能比起传统的ELK日志展示强大了许多，但是还是存在具体操作需要手动查找、拷贝命名空间、pod名称、容器名称，虽然命名空间和容器名称为固定的，但是pod名称需要查找当前pod的名称，操作起来比较繁琐，功能方面确实不如rancher的实时日志展示，并提供进入终端查看日志文件的功能强大。</p><p>同时该功能才测试使用的时候还出现过网络连接错误，闪退等情况，总体来说属于阿里云日志服务的一项新功能，不适合直接给开发运维来使用。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>由于公司一直使用阿里云的日志服务，总体来说，kubernetes日志采集和展示服务的接入和配置速度很快，如果有需要可以随时拉起并投入使用。</p><p>对于现阶段有更方便使用的容器化展示平台的情况下，阿里云livetail方案可以作为一个备选方案，一旦rancher出现问题，可以所以接入和配置使用。</p><p>总的来说此方案不如rancher使用灵活和功能强大，不建议推广使用，可作为一个备选方</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;目前的项目日志都是通过Logtail直接采集，投递到OSS持久化，同时可以通过阿里云日志服务、devops自建平台进行查看（虽然大部分人是直</summary>
      
    
    
    
    
    <category term="aliyun" scheme="https://engining.net/tags/aliyun/"/>
    
    <category term="日志组件" scheme="https://engining.net/tags/%E6%97%A5%E5%BF%97%E7%BB%84%E4%BB%B6/"/>
    
    <category term="livetail" scheme="https://engining.net/tags/livetail/"/>
    
    <category term="k8s" scheme="https://engining.net/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>understanding spring boot</title>
    <link href="https://engining.net/2018/02/04/2018-02-04-understanding%20spring%20boot/"/>
    <id>https://engining.net/2018/02/04/2018-02-04-understanding%20spring%20boot/</id>
    <published>2018-02-03T16:00:00.000Z</published>
    <updated>2021-09-27T03:01:02.448Z</updated>
    
    <content type="html"><![CDATA[<p>Spring boot is an opinionated library that allows to create executable Spring applications with a convention over configuration approach.</p><p>The magic behind this framework lies in the @EnableAutoConfiguration annotation, which will automatically load all the beans the application requires depending on what Spring Boot finds in the classpath.</p><p>The @Enable* annotations<br>The @Enable… annotations are not new, they were first introduced in Spring 3 when the idea of replacing the XML files with java annotated classes is born.</p><p>A lot of Spring users already know @EnableTransactionManagement, which will enable declarative transaction management, @EnableWebMvc, which enables Spring MVC, or @EnableScheduling, which will initialize a scheduler.</p><p>These annotations are in fact a simple configuration import with the @Import annotation.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@Target(ElementType.TYPE)</span><br><span class="line">@Retention(RetentionPolicy.RUNTIME)</span><br><span class="line">@Documented</span><br><span class="line">@Import(&#123; EnableAutoConfigurationImportSelector.class,</span><br><span class="line">        AutoConfigurationPackages.Registrar.class &#125;)</span><br><span class="line">public @interface EnableAutoConfiguration &#123;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Exclude specific auto-configuration classes such that they will never be applied.</span><br><span class="line">     */</span><br><span class="line">    Class&lt;?&gt;[] exclude() default &#123;&#125;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The EnableAutoConfigurationImportSelector uses SpringFactoriesLoader#loadFactoryNames of Spring core. SpringFactoriesLoader will look for jars containing a file with the path META-INF&#x2F;spring.factories.</p><p>When it finds such a file, the SpringFactoriesLoader will look for the property named after our configuration file. In our case, org.springframework.boot.autoconfigure.EnableAutoConfiguration.</p><p>Let’s take a look at the spring-boot-autoconfigure jar, which indeed contains a spring.factories file copied below:</p><h1 id="Initializers"><a href="#Initializers" class="headerlink" title="Initializers"></a>Initializers</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">org.springframework.context.ApplicationContextInitializer=\</span><br><span class="line">org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer</span><br></pre></td></tr></table></figure><h1 id="Auto-Configure"><a href="#Auto-Configure" class="headerlink" title="Auto Configure"></a>Auto Configure</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">org.springframework.boot.autoconfigure.EnableAutoConfiguration=\</span><br><span class="line">org.springframework.boot.autoconfigure.aop.AopAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.MessageSourceAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.PropertyPlaceholderAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.JpaRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.MongoRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.redis.RedisAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jms.JmsTemplateAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.mobile.DeviceResolverAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.mongo.MongoTemplateAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.security.FallbackWebSecurityAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.EmbeddedServletContainerAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.DispatcherServletAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.ServerPropertiesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.MultipartAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.HttpMessageConvertersAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.websocket.WebSocketAutoConfiguration</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>In this file, we can see a list of the Spring Boot auto-configurations. Let’s take a closer look at one of those configurations, MongoAutoConfiguration for instance:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">@ConditionalOnClass(Mongo.class)</span><br><span class="line">@EnableConfigurationProperties(MongoProperties.class)</span><br><span class="line">public class MongoAutoConfiguration &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private MongoProperties properties;</span><br><span class="line"></span><br><span class="line">    private Mongo mongo;</span><br><span class="line"></span><br><span class="line">    @PreDestroy</span><br><span class="line">    public void close() throws UnknownHostException &#123;</span><br><span class="line">        if (this.mongo != null) &#123;</span><br><span class="line">            this.mongo.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    @ConditionalOnMissingBean</span><br><span class="line">    public Mongo mongo() throws UnknownHostException &#123;</span><br><span class="line">        this.mongo = this.properties.createMongoClient();</span><br><span class="line">        return this.mongo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>This simple Spring configuration class declares typical beans needed to use mongoDb.</p><p>This classes, like a lot of others in Spring Boot relies heavily on Spring annotations:</p><p>@ConditionOnClass activates a configuration only if one or several classes are present on the classpath<br>@EnableConfigurationProperties automatically maps a POJO to a set of properties in the Spring Boot configuration file (by default application.properties)<br>@ConditionalOnMissingBean enables a bean definition only if the bean wasn’t previously defined<br>You can also refine the order in which those configuration classes load with @AutoConfigureBefore et @AutoConfigureAfter.</p><p>Properties Mapping<br>Let’s look at MongoProperties, which is a classic example of Spring Boot properties mapping:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@ConfigurationProperties(prefix = &quot;spring.data.mongodb&quot;)</span><br><span class="line">public class MongoProperties &#123;</span><br><span class="line"></span><br><span class="line">    private String host;</span><br><span class="line">    private int port = DBPort.PORT;</span><br><span class="line">    private String uri = &quot;mongodb://localhost/test&quot;;</span><br><span class="line">    private String database;</span><br><span class="line"></span><br><span class="line">    // ... getters/ setters omitted</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The @ConfigurationProperties will associate every properties with a particular prefix to the POJO. For instance, the property spring.data.mongodb.port will be mapped to the port attribute of this class.</p><p>If you’re a Spring Boot user, I strongly encourage you to use those capabilities to remove the boiler plate code associated with configuration properties.</p><p>The @Conditional annotations<br>The power of Spring Boot lies in one of Spring 4 new features: the @Conditional annotations, which will enable some configuration only if a specific condition is met.</p><p>A sneak peek in the org.springframework.boot.autoconfigure.condition package in Spring Boot will give us an overview of what we can do with those annotations:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">@ConditionalOnBean</span><br><span class="line">@ConditionalOnClass</span><br><span class="line">@ConditionalOnExpression</span><br><span class="line">@ConditionalOnMissingBean</span><br><span class="line">@ConditionalOnMissingClass</span><br><span class="line">@ConditionalOnNotWebApplication</span><br><span class="line">@ConditionalOnResource</span><br><span class="line">@ConditionalOnWebApplication</span><br><span class="line">Let’s take a closer look at @ConditionalOnExpression, which allows you to write a condition in the Spring Expression language.</span><br><span class="line"></span><br><span class="line">@Conditional(OnExpressionCondition.class)</span><br><span class="line">@Retention(RetentionPolicy.RUNTIME)</span><br><span class="line">@Target(&#123; ElementType.TYPE, ElementType.METHOD &#125;)</span><br><span class="line">public @interface ConditionalOnExpression &#123;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * The SpEL expression to evaluate. Expression should return &#123;@code true&#125; if the</span><br><span class="line">     * condition passes or &#123;@code false&#125; if it fails.</span><br><span class="line">     */</span><br><span class="line">    String value() default &quot;true&quot;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>In this class, we indeed make use of the @Conditional annotation. The condition is defined in the OnExpressionCondition class:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">public class OnExpressionCondition extends SpringBootCondition &#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public ConditionOutcome getMatchOutcome(ConditionContext context, AnnotatedTypeMetadata metadata) &#123;</span><br><span class="line">        // ...</span><br><span class="line">        // we first get a handle on the EL context via the ConditionContext</span><br><span class="line"></span><br><span class="line">        boolean result = (Boolean) resolver.evaluate(expression, expressionContext);</span><br><span class="line"></span><br><span class="line">        // ...</span><br><span class="line">        // here we create a message the user will see when debugging</span><br><span class="line"></span><br><span class="line">        return new ConditionOutcome(result, message.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>In the end, the @Conditional are resolved to simple booleans, via the ConditionOutcome.isMatch method.</p><p>The ApplicationContextInitializers<br>The second possibility that the spring.factories file offers, is to define application initializers. They allow us to manipulate Spring’s applicationContext before the application is loaded.</p><p>In particular, they can create listeners on the context thanks to the ConfigurableApplicationContext#addApplicationListener method.</p><p>Spring Boot does that in the AutoConfigurationReportLoggingInitializer which listens to system events, like context refresh or the application’s failure to start. This will help create the auto-configuration report when you start your application in debug mode.</p><p>You can start your application in debug mode with either the -Ddebug flag or add the property debug&#x3D;true to application.properties.</p><p>Debug Spring Boot Auto-Configuration<br>The documentation gives us some advice to understand what happened during the auto-configuration.</p><p>When launched in debug mode, Spring Boot will generate a report that looks like this one:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">Positive matches:</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">   MessageSourceAutoConfiguration</span><br><span class="line">      - @ConditionalOnMissingBean (types: org.springframework.context.MessageSource; SearchStrategy: all) found no beans (OnBeanCondition)</span><br><span class="line"></span><br><span class="line">   JmxAutoConfiguration</span><br><span class="line">      - @ConditionalOnClass classes found: org.springframework.jmx.export.MBeanExporter (OnClassCondition)</span><br><span class="line">      - SpEL expression on org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration: $&#123;spring.jmx.enabled:true&#125; (OnExpressionCondition)</span><br><span class="line">      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: all) found no beans (OnBeanCondition)</span><br><span class="line"></span><br><span class="line">   DispatcherServletAutoConfiguration</span><br><span class="line">      - found web application StandardServletEnvironment (OnWebApplicationCondition)</span><br><span class="line">      - @ConditionalOnClass classes found: org.springframework.web.servlet.DispatcherServlet (OnClassCondition)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Negative matches:</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">   DataSourceAutoConfiguration</span><br><span class="line">      - required @ConditionalOnClass classes not found: org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType (OnClassCondition)</span><br><span class="line"></span><br><span class="line">   DataSourceTransactionManagerAutoConfiguration</span><br><span class="line">      - required @ConditionalOnClass classes not found: org.springframework.jdbc.core.JdbcTemplate,org.springframework.transaction.PlatformTransactionManager (OnClassCondition)</span><br><span class="line"></span><br><span class="line">   MongoAutoConfiguration</span><br><span class="line">      - required @ConditionalOnClass classes not found: com.mongodb.Mongo (OnClassCondition)</span><br><span class="line"></span><br><span class="line">   FallbackWebSecurityAutoConfiguration</span><br><span class="line">      - SpEL expression on org.springframework.boot.autoconfigure.security.FallbackWebSecurityAutoConfiguration: !$&#123;security.basic.enabled:true&#125; (OnExpressionCondition)</span><br><span class="line"></span><br><span class="line">   SecurityAutoConfiguration</span><br><span class="line">      - required @ConditionalOnClass classes not found: org.springframework.security.authentication.AuthenticationManager (OnClassCondition)</span><br><span class="line"></span><br><span class="line">   EmbeddedServletContainerAutoConfiguration.EmbeddedJetty</span><br><span class="line">      - required @ConditionalOnClass classes not found: org.eclipse.jetty.server.Server,org.eclipse.jetty.util.Loader (OnClassCondition)</span><br><span class="line"></span><br><span class="line">   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#localeResolver</span><br><span class="line">      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.LocaleResolver; SearchStrategy: all) found no beans (OnBeanCondition)</span><br><span class="line">      - SpEL expression: &#x27;$&#123;spring.mvc.locale:&#125;&#x27; != &#x27;&#x27; (OnExpressionCondition)</span><br><span class="line"></span><br><span class="line">   WebSocketAutoConfiguration</span><br><span class="line">      - required @ConditionalOnClass classes not found: org.springframework.web.socket.WebSocketHandler,org.apache.tomcat.websocket.server.WsSci (OnClassCondition)</span><br></pre></td></tr></table></figure><p>For each auto-configuration, we can see why it was initiated or why it failed.</p><p>Conclusion<br>Spring Boot’s approach leverages the possibilities of Spring 4 and allows to create an auto-configured executable jar.</p><p>Don’t forget that, as the documentation states, you can gradually replace the auto-configuration by declaring your own beans.</p><p>What I love about Spring Boot is that it allows you to prototype an application very quickly but also to learn with its source. Auto-configurations are neat pieces of code that can teach you a thing or two about Spring.</p><p>copyright: <a href="https://geowarin.github.io/understanding-spring-boot.html">https://geowarin.github.io/understanding-spring-boot.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Spring boot is an opinionated library that allows to create executable Spring applications with a convention over configuration approach.</summary>
      
    
    
    
    
    <category term="springboot @Enable*" scheme="https://engining.net/tags/springboot-Enable/"/>
    
  </entry>
  
  <entry>
    <title>分布式缓存学习心得</title>
    <link href="https://engining.net/2018/01/14/2018-01-14-%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/"/>
    <id>https://engining.net/2018/01/14/2018-01-14-%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/</id>
    <published>2018-01-13T16:00:00.000Z</published>
    <updated>2021-09-27T03:01:02.447Z</updated>
    
    <content type="html"><![CDATA[<h2 id="缓存为王"><a href="#缓存为王" class="headerlink" title="缓存为王"></a>缓存为王</h2><blockquote><p>音乐是时间的艺术,缓存是软件时间的艺术</p></blockquote><h3 id="1-客户端缓存"><a href="#1-客户端缓存" class="headerlink" title="1. 客户端缓存"></a>1. 客户端缓存</h3><h3 id="2-页面缓存"><a href="#2-页面缓存" class="headerlink" title="2. 页面缓存"></a>2. 页面缓存</h3><p>2.1 浏览器缓存</p><p>2.2 APP上的缓存</p><h3 id="3-网络中的缓存"><a href="#3-网络中的缓存" class="headerlink" title="3. 网络中的缓存"></a>3. 网络中的缓存</h3><p>3.1 web代理缓存</p><ul><li>squid</li></ul><p>3.2 边缘缓存</p><ul><li>varinish</li><li>CDN<ul><li>cloud front in aws</li><li>china cache</li></ul></li></ul><h3 id="4-服务端的缓存"><a href="#4-服务端的缓存" class="headerlink" title="4. 服务端的缓存"></a>4. 服务端的缓存</h3><p>4.1 数据库缓存</p><p>4.2 平台级缓存</p><blockquote><p>一级缓存</p></blockquote><p>4.2 应用级缓存</p><ul><li><p>REDIS 集群</p><ul><li><p>中间件twemproxy:</p><blockquote><p> <a href="https://github.com/twitter/twemproxy">https://github.com/twitter/twemproxy</a></p></blockquote></li><li><p>redis4.0、codis、阿里云redis 3种redis集群对比分析</p><blockquote><p><a href="https://yq.aliyun.com/articles/68593?utm_campaign=wenzhang&amp;utm_medium=article&amp;utm_source=QQ-qun&amp;utm_content=m_10099">https://yq.aliyun.com/articles/68593?utm_campaign=wenzhang&amp;utm_medium=article&amp;utm_source=QQ-qun&amp;utm_content=m_10099</a></p></blockquote></li></ul></li><li><p>多级缓存</p></li></ul><h2 id="分布式系统理论"><a href="#分布式系统理论" class="headerlink" title="分布式系统理论"></a>分布式系统理论</h2><blockquote><p>未完继续</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;缓存为王&quot;&gt;&lt;a href=&quot;#缓存为王&quot; class=&quot;headerlink&quot; title=&quot;缓存为王&quot;&gt;&lt;/a&gt;缓存为王&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;音乐是时间的艺术,缓存是软件时间的艺术&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;1-客</summary>
      
    
    
    
    
    <category term="分布式缓存" scheme="https://engining.net/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/"/>
    
    <category term="Redis" scheme="https://engining.net/tags/Redis/"/>
    
    <category term="memcache" scheme="https://engining.net/tags/memcache/"/>
    
    <category term="guavacache" scheme="https://engining.net/tags/guavacache/"/>
    
    <category term="ehcache" scheme="https://engining.net/tags/ehcache/"/>
    
    <category term="tair" scheme="https://engining.net/tags/tair/"/>
    
  </entry>
  
  <entry>
    <title>aspectJ 编译时织入遇到的3个问题</title>
    <link href="https://engining.net/2018/01/13/2018-01-13-aspectj%E7%BC%96%E8%AF%91%E6%97%B6%E7%BB%87%E5%85%A5%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/"/>
    <id>https://engining.net/2018/01/13/2018-01-13-aspectj%E7%BC%96%E8%AF%91%E6%97%B6%E7%BB%87%E5%85%A5%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</id>
    <published>2018-01-12T16:00:00.000Z</published>
    <updated>2021-09-27T03:01:02.447Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>aspectJ 编译时织入 结合spring动态代理时遇到的3个问题：</p></blockquote><h3 id="第1个问题"><a href="#第1个问题" class="headerlink" title="第1个问题"></a>第1个问题</h3><ul><li><p>自定义注解</p><figure><a><img src="/img/in-post/20180113/pic1.png"></a></figure></li><li><p>拦截器</p><figure><a><img src="/img/in-post/20180113/pic2.png"></a></figure></li><li><p>编译后的class：</p><figure><a><img src="/img/in-post/20180113/pic3.png"></a></figure></li></ul><p>当调用 bizServcie.loanAmount时进入了2次，看编译后的类确实是调用者method和加@Voucher的metod都被编译植入了</p><p>问题出在：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@Around(&quot;@annotation(net.keking.lbt.business.vou.annotation.Voucher</span><br><span class="line">)&quot;)</span><br></pre></td></tr></table></figure><p>这个是 springaop语法，并不是aspectJ语法<br>正确的pointcut 是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@Around(&quot;execution(@net.keking.lbt.business.vou.annotation.Voucher * *(..))&quot;)</span><br></pre></td></tr></table></figure><ul><li>目前编译后的效果：<figure><a><img src="/img/in-post/20180113/pic4.png"></a></figure></li></ul><h3 id="第2个问题"><a href="#第2个问题" class="headerlink" title="第2个问题"></a>第2个问题</h3><p>@Aspect 拦截器无法注入其它servcie的问题，因为@aspect 的注解是ACJ编译器编译的，没有纳入spring的管理<br>需要增加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;bean id=&quot;voucherAspectJ&quot; class=&quot;net.keking.lbt.business.vou.VoucherAopHandler&quot; factory-method=&quot;aspectOf&quot;/&gt;</span><br></pre></td></tr></table></figure><p>从而纳入spring上下文容器</p><h3 id="第3个问题"><a href="#第3个问题" class="headerlink" title="第3个问题"></a>第3个问题</h3><p>如果自定义注解在project中单独的module ,如lbt-aspects， 其它moudule如何引用此自定义注解<br>POM中需要修改：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;plugin&gt;</span><br><span class="line">    &lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;aspectj-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">    &lt;configuration&gt;</span><br><span class="line">        &lt;aspectLibraries&gt;</span><br><span class="line">            &lt;aspectLibrary&gt;</span><br><span class="line">                &lt;groupId&gt;net.keking.lbt&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;lbt-aspects&lt;/artifactId&gt;</span><br><span class="line">            &lt;/aspectLibrary&gt;</span><br><span class="line">        &lt;/aspectLibraries&gt;</span><br><span class="line">    &lt;/configuration&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;aspectJ 编译时织入 结合spring动态代理时遇到的3个问题：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;第1个问题&quot;&gt;&lt;a href=&quot;#第1个问题&quot; class=&quot;headerlink&quot; title=&quot;第1个问题&quot;&gt;&lt;/a&gt;第</summary>
      
    
    
    
    
    <category term="Aspectj" scheme="https://engining.net/tags/Aspectj/"/>
    
    <category term="aop" scheme="https://engining.net/tags/aop/"/>
    
    <category term="spring" scheme="https://engining.net/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>DevOps 文章分享</title>
    <link href="https://engining.net/2018/01/13/2018-01-13-DevOps%E7%9F%A5%E8%AF%86%E5%88%86%E4%BA%AB2%E7%AF%87/"/>
    <id>https://engining.net/2018/01/13/2018-01-13-DevOps%E7%9F%A5%E8%AF%86%E5%88%86%E4%BA%AB2%E7%AF%87/</id>
    <published>2018-01-12T16:00:00.000Z</published>
    <updated>2021-09-27T03:01:02.447Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>DevOps 文章分享, 抽出时间再整理</p></blockquote><a href="https://mp.weixin.qq.com/s?__biz=MzI0Njc5ODkxMA==&mid=2247485663&idx=1&sn=8ac5851d9690617f8c07908fd9f68239&chksm=e9b8878edecf0e9851b5dcae59a4f1b4c2b61d37d74526813d3a37d0be9e688cbc97d2e9b117&scene=21#wechat_redirect" target="_blank">    大象翩翩起舞！国外大型银行 DevOps 转型干货总结</a><a href="https://mp.weixin.qq.com/s?__biz=MzI0Njc5ODkxMA==&mid=2247485681&idx=1&sn=26ae12321e4d724fe116b2a74d35b20f&chksm=e9b887a0decf0eb64d9074573e48ae5a3e37c894850bb5f173fd62d71409387ad17f8d769fbe&mpshare=1&scene=1&srcid=0108EXhjIeT3gaff2uUI0ZqR&key=985723cab6b0083607fb8a253a6c5d0915b0427e13734187cc7a323f1eac1093524d684d9dcc9c380fe1280c9269aafb7751d66588c0d0b6b3882471ac5a49131873480416ff130d5a2fc652475d6c39&ascene=0&uin=Nzg5MTQ4NTYw&devicetype=iMac+MacBookPro12%2C1+OSX+OSX+10.12.6+build(16G1036)&version=12020810&nettype=WIFI&lang=zh_CN&fontScale=100&pass_ticket=SMlGiesq1O1yksT0XIkWUgQ4ME7%2FCC1aQV14u51ULAEZlnLlm20riGvPMs4%2FI5lV" target="_blank">    炫酷实用的 DevOps 仪表盘，你值得拥有的交付流水线信息整合工具<a>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;DevOps 文章分享, 抽出时间再整理&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzI0Njc5ODkxMA==&amp;mid=2247485663&amp;idx=1&amp;sn=8a</summary>
      
    
    
    
    
    <category term="DevOps" scheme="https://engining.net/tags/DevOps/"/>
    
    <category term="大盘" scheme="https://engining.net/tags/%E5%A4%A7%E7%9B%98/"/>
    
    <category term="持续交付" scheme="https://engining.net/tags/%E6%8C%81%E7%BB%AD%E4%BA%A4%E4%BB%98/"/>
    
  </entry>
  
  <entry>
    <title>开源许可协议了解这些就够了</title>
    <link href="https://engining.net/2018/01/02/2018-01-02-%E5%BC%80%E6%BA%90%E5%8D%8F%E8%AE%AE/"/>
    <id>https://engining.net/2018/01/02/2018-01-02-%E5%BC%80%E6%BA%90%E5%8D%8F%E8%AE%AE/</id>
    <published>2018-01-01T16:00:00.000Z</published>
    <updated>2021-09-27T03:01:02.447Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我们开发中经常会用到一些开源框架, 每个框架一般都有自己的开源协议. 本文介绍了6种常用的开源协议, 让你用得明白放心~</p></blockquote><h2 id="一、如何选择开源协议？"><a href="#一、如何选择开源协议？" class="headerlink" title="一、如何选择开源协议？"></a>一、如何选择开源协议？</h2><p>现今存在的开源协议很多，可以在（<a href="http://www.opensource.org/licenses/alphabetical">http://www.opensource.org/licenses/alphabetical</a> ）详细查看。我们最常用到的开源协议有6种，这些都是OSI 批准的协议，也是绝大多数公司会用到的协议。</p><ul><li>GPL</li><li>LGPL</li><li>BSD</li><li>Apache</li><li>Mozilla</li><li>MIT</li></ul><p>下图是网上流行的一张协议分析图，能让我们一目了然的去判断该选择何种开源协议（原著：乌克兰程序员Paul Bagwell，翻译：阮一峰）。</p><figure><a><img src="/img/in-post/20180102/4048192-4396bb85f072a39e.jpeg"></a></figure><p>看完这张图，是不是心里有底了呢？稍微总结一下:</p><ul><li>如果你在商业公司上班，最好不要使用GPL协议的开源软件，因为它具有“传染性”，并且强制开源，只要引入的某个模块是GPL的，它会一直扩展到最上层知道整个项目都强制GPL开源。</li><li>用BSD、Apache或者MIT的开源项目则一般不会有问题，只需要开源项目本身的安全性或者健壮性等其他需求满足公司要求即可。</li><li>另外要说明一下的是，有协议和没声明协议的裸代码是有非常重要区别的，一般作品当中没声明协议的默认为Copy right的，也就是版权保留。此种情况表明他人没有任何授权，不得复制分发修改使用等等。所以如果要开源自己的代码，最好也是选择这些著名的开源协议。</li></ul><hr><h2 id="二、6中常用开源协议介绍"><a href="#二、6中常用开源协议介绍" class="headerlink" title="二、6中常用开源协议介绍"></a>二、6中常用开源协议介绍</h2><p>最后，针对上面提到的六种开源许可协议做一个简单资料整理和介绍，供大家查阅。</p><h3 id="1-BSD-original-BSD-license-、-FreeBSD-license-、-Original-BSD-license"><a href="#1-BSD-original-BSD-license-、-FreeBSD-license-、-Original-BSD-license" class="headerlink" title="1. BSD(original BSD license 、 FreeBSD license 、 Original BSD license)"></a>1. BSD(original BSD license 、 FreeBSD license 、 Original BSD license)</h3><blockquote><p> BSD 开源协议是一个给于使用者很大自由的协议。基本上使用者可以” 为所欲为”, 可以自由的使用，修改源代码，也可以将修改后的代码作为开源或者专有软件再发布。<br>但” 为所欲为” 的前提当你发布使用了BSD 协议的代码，或则以BSD 协议代码为基础做二次开发自己的产品时，需要满足三个条件：</p></blockquote><p>如果再发布的产品中包含源代码，则在源代码中必须带有原来代码中的BSD 协议。<br>如果再发布的只是二进制类库&#x2F; 软件，则需要在类库&#x2F; 软件的文档和版权声明中包含原来代码中的BSD 协议。<br>不可以用开源代码的作者&#x2F; 机构名字和原来产品的名字做市场推广。<br>BSD 代码鼓励代码共享，但需要尊重代码作者的著作权。BSD 由于允许使用者修改和重新发布代码，也允许使用或在BSD 代码上开发商业软件发布和销售，因此是对 商业集成很友好的协议。而很多的公司企业在选用开源产品的时候都首选BSD 协议，因为可以完全控制这些第三方的代码，在必要的时候可以修改或者二次开发。</p><h3 id="2-Apache-Licence-2-0-Apache-License-Version-2-0-、Apache-License-Version-1-1-、Apache-License-Version-1-0"><a href="#2-Apache-Licence-2-0-Apache-License-Version-2-0-、Apache-License-Version-1-1-、Apache-License-Version-1-0" class="headerlink" title="2. Apache Licence 2.0(Apache License, Version 2.0 、Apache License, Version 1.1 、Apache License, Version 1.0)"></a>2. Apache Licence 2.0(Apache License, Version 2.0 、Apache License, Version 1.1 、Apache License, Version 1.0)</h3><blockquote><p>Apache Licence 是著名的非盈利开源组织Apache 采用的协议。该协议和BSD 类似，同样鼓励代码共享和尊重原作者的著作权，同样允许代码修改，再发布（作为开源或商业软件）。</p></blockquote><p>需要满足的条件也和BSD 类似：需要给代码的用户一份Apache Licence<br>如果你修改了代码，需要再被修改的文件中说明。在延伸的代码中（修改和有源代码衍生的代码中）需要带有原来代码中的协议，商标，专利声明和其他原来作者规定需要包含的说明。<br>如果再发布的产品中包含一个Notice 文件，则在Notice 文件中需要带有Apache Licence 。你可以在Notice 中增加自己的许可，但不可以表现为对Apache Licence 构成更改。<br>Apache Licence 也是对商业应用友好的许可。使用者也可以在需要的时候修改代码来满足需要并作为开源或商业产品发布&#x2F; 销售。</p><h3 id="3-GPL-GNU-General-Public-License"><a href="#3-GPL-GNU-General-Public-License" class="headerlink" title="3.GPL(GNU General Public License)"></a>3.GPL(GNU General Public License)</h3><blockquote><p>我们很熟悉的Linux 就是采用了GPL 。GPL 协议和BSD, Apache Licence 等鼓励代码重用的许可很不一样。GPL不允许修改后和衍生的代码做为闭源的商业软件发布和销售。这也就是为什么我们能用免费的各种linux ，包括商业公司的linux 和linux 上各种各样的由个人，组织，以及商业软件公司开发的免费软件了。</p></blockquote><p>GPL 协议的主要内容是只要在一个软件中使用(” 使用” 指类库引用，修改后的代码或者衍生代码)GPL 协议的产品，则该软件产品必须也采用GPL 协议，既必须也是开源和免费。这就是所谓的” 传染性”。GPL 协议的产品作为一个单独的产品使用没有任何问题，还可以享受免费的优势。<br>由于GPL 严格要求使用了GPL 类库的软件产品必须使用GPL 协议，对于使用GPL 协议的开源代码，商业软件或者对代码有保密要求的部门就不适合集成&#x2F; 采用作为类库和二次开发的基础。</p><h3 id="4-LGPL-GNU-Lesser-General-Public-License"><a href="#4-LGPL-GNU-Lesser-General-Public-License" class="headerlink" title="4.LGPL(GNU Lesser General Public License)"></a>4.LGPL(GNU Lesser General Public License)</h3><blockquote><p>LGPL 是GPL 的一个为主要为类库使用设计的开源协议。和GPL 要求任何使用&#x2F; 修改&#x2F; 衍生之GPL 类库的的软件必须采用GPL 协议不同。LGPL 允许商业软件通过类库引用(link) 方式使用LGPL 类库而不需要开源商业软件的代码。这使得采用LGPL 协议的开源代码可以被商业软件作为类库引用并 发布和销售。</p></blockquote><p>但是如果修改LGPL 协议的代码或者衍生，则所有修改的代码，涉及修改部分的额外代码和衍生的代码都必须采用LGPL 协议。因此LGPL 协议的开源 代码很适合作为第三方类库被商业软件引用，但不适合希望以LGPL 协议代码为基础，通过修改和衍生的方式做二次开发的商业软件采用。</p><h3 id="5-MIT-（The-MIT-License）"><a href="#5-MIT-（The-MIT-License）" class="headerlink" title="5.MIT （The MIT License）"></a>5.MIT （The MIT License）</h3><blockquote><p>MIT 是和BSD 一样宽范的许可协议, 作者只想保留版权, 而无任何其他了限制. 也就是说, 你必须在你的发行版里包含原许可协议的声明, 无论你是以二进制发布的还是以源代码发布的.</p></blockquote><h3 id="6-MPL-Mozilla-Public-License"><a href="#6-MPL-Mozilla-Public-License" class="headerlink" title="6. MPL(Mozilla Public License)"></a>6. MPL(Mozilla Public License)</h3><blockquote><p>MPL协议允许免费重发布、免费修改，但要求修改后的代码版权归软件的发起者 。这种授权维护了商业软件的利益，它要求基于这种软件的修改无偿贡献版权给该软件。</p></blockquote><hr><p>作者：菜刀文<br>链接：<a href="https://www.jianshu.com/p/a57c13631d5e">https://www.jianshu.com/p/a57c13631d5e</a><br>來源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;我们开发中经常会用到一些开源框架, 每个框架一般都有自己的开源协议. 本文介绍了6种常用的开源协议, 让你用得明白放心~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;一、如何选择开源协议？&quot;&gt;&lt;a href=&quot;#一、如何选择开源协议？&quot; c</summary>
      
    
    
    
    
    <category term="开源协议" scheme="https://engining.net/tags/%E5%BC%80%E6%BA%90%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>第一个开源项目</title>
    <link href="https://engining.net/2017/12/19/2017-12-19-%E5%85%AC%E5%8F%B8%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"/>
    <id>https://engining.net/2017/12/19/2017-12-19-%E5%85%AC%E5%8F%B8%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/</id>
    <published>2017-12-18T16:00:00.000Z</published>
    <updated>2021-09-27T03:01:02.447Z</updated>
    
    <content type="html"><![CDATA[<h2 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h2><p>解决了文件文档在线预览的问题，对标业内付费产品有【永中office】【office365】【idocv】等，<br>该项目基本支持主流办公文档的在线预览，如doc,docx,Excel,pdf,txt,zip,rar,图片等等</p><h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><ul><li>码云：<a href="https://gitee.com/kekingcn/file-online-preview">https://gitee.com/kekingcn/file-online-preview</a></li><li>github：<a href="https://github.com/kekingcn/file-online-preview">https://github.com/kekingcn/file-online-preview</a></li></ul><h2 id="公司简介"><a href="#公司简介" class="headerlink" title="公司简介"></a>公司简介</h2><p>上海凯京信达科技集团有限公司（“凯京集团”），2015年成立于上海陆家嘴，专注为中小微企业和个人提供各类场景下的信贷服务，产品包括商业保理业务、融资租赁业务、供应链金融、大数据征信等。</p><p>公司2015年获得知名投资机构数千万元人民币天使轮投资，2016年2月获得红杉资本领投的1亿元人民币A轮投资，2016年12月获得由中航信托领投、红杉资本、复朴资本跟投的2亿人民币B轮融资。</p><p>我们的使命：数据重构物流</p><p>我们的愿景：最具价值的数据科技企业</p><h2 id="公司网址"><a href="#公司网址" class="headerlink" title="公司网址"></a>公司网址</h2><p><a target="_blank" href="http://www.keking.cn">凯京集团</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;项目介绍&quot;&gt;&lt;a href=&quot;#项目介绍&quot; class=&quot;headerlink&quot; title=&quot;项目介绍&quot;&gt;&lt;/a&gt;项目介绍&lt;/h2&gt;&lt;p&gt;解决了文件文档在线预览的问题，对标业内付费产品有【永中office】【office365】【idocv】等，&lt;br&gt;该项目基</summary>
      
    
    
    
    
    <category term="开源" scheme="https://engining.net/tags/%E5%BC%80%E6%BA%90/"/>
    
    <category term="在线预览" scheme="https://engining.net/tags/%E5%9C%A8%E7%BA%BF%E9%A2%84%E8%A7%88/"/>
    
    <category term="office" scheme="https://engining.net/tags/office/"/>
    
    <category term="zip" scheme="https://engining.net/tags/zip/"/>
    
    <category term="pdf" scheme="https://engining.net/tags/pdf/"/>
    
  </entry>
  
  <entry>
    <title>日志收集实践参考</title>
    <link href="https://engining.net/2017/12/15/2017-12-15-%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86%E5%AE%9E%E8%B7%B5%E5%8F%82%E8%80%83/"/>
    <id>https://engining.net/2017/12/15/2017-12-15-%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86%E5%AE%9E%E8%B7%B5%E5%8F%82%E8%80%83/</id>
    <published>2017-12-14T16:00:00.000Z</published>
    <updated>2021-09-27T03:01:02.446Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-日志规约"><a href="#一-日志规约" class="headerlink" title="一. 日志规约"></a>一. 日志规约</h2><blockquote><p>记日志的目的就是为了快速定位问题</p></blockquote><ol><li>参见阿里手册</li></ol><h2 id="二-本地测试环境准备"><a href="#二-本地测试环境准备" class="headerlink" title="二. 本地测试环境准备"></a>二. 本地测试环境准备</h2><blockquote><p>今天主要讲的是 logs -&gt; logstash -&gt; kafka ，本地使用docker模拟</p></blockquote><h3 id="一-启动zookeeper"><a href="#一-启动zookeeper" class="headerlink" title="(一) 启动zookeeper"></a>(一) 启动zookeeper</h3><ol><li><p>拉取zookeeper docker镜像</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull wurstmeister/zookeeper</span><br></pre></td></tr></table></figure></li><li><p>启动zookeeper</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name zookeeper -p 2181 -t wurstmeister/zookeeper</span><br></pre></td></tr></table></figure></li></ol><h3 id="（二）-启动Kafka，查看接收消息"><a href="#（二）-启动Kafka，查看接收消息" class="headerlink" title="（二） 启动Kafka，查看接收消息"></a>（二） 启动Kafka，查看接收消息</h3><ol><li><p>拉取kafka docker镜像</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull wurstmeister/kafka</span><br></pre></td></tr></table></figure></li><li><p>启动kafka</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run --name kafka -e HOST_IP=localhost -e KAFKA_ADVERTISED_PORT=9092 -e KAFKA_BROKER_ID=1 -e ZK=zk -p 9092 --link zookeeper:zk -t wurstmeister/kafka</span><br><span class="line">docker ps</span><br></pre></td></tr></table></figure></li><li><p>创建一个topic</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it $&#123;CONTAINER ID&#125; /bin/bash</span><br><span class="line">cd opt/kafka_2.12-1.0.0/</span><br><span class="line">bin/kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic biz-logs</span><br></pre></td></tr></table></figure></li><li><p>新打开一个shell起一个消费者</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd opt/kafka_2.12-1.0.0/</span><br><span class="line">bin/kafka-console-consumer.sh --zookeeper zookeeper:2181 --topic biz-logs --from-beginning</span><br></pre></td></tr></table></figure></li><li><p>新打开一个shell起一个生产者测试下</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd opt/kafka_2.12-1.0.0/</span><br><span class="line">bin/kafka-console-producer.sh --broker-list localhost:9092 --topic biz-logs</span><br></pre></td></tr></table></figure></li><li><p>在生产者输入，显示在消费者的输出中，表明启动正常了</p></li></ol><h3 id="三-启动logstash"><a href="#三-启动logstash" class="headerlink" title="(三) 启动logstash"></a>(三) 启动logstash</h3><ol><li><p>拉取logstash docker 镜像</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull logstash</span><br></pre></td></tr></table></figure></li><li><p>创建udp接收，输出到kafka的配置文件udp-kafka.conf</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">  gelf &#123;</span><br><span class="line">    port =&gt; 12201</span><br><span class="line">    type =&gt; docker</span><br><span class="line">    codec =&gt; json</span><br><span class="line">  &#125;</span><br><span class="line">  udp &#123;</span><br><span class="line">    type =&gt; docker</span><br><span class="line">    port =&gt; 10800</span><br><span class="line">    codec =&gt; json</span><br><span class="line">  &#125;</span><br><span class="line">  tcp &#123;</span><br><span class="line">    type =&gt; docker</span><br><span class="line">    port =&gt; 10800</span><br><span class="line">    codec =&gt; json</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">  stdout &#123; codec =&gt; rubydebug &#125;</span><br><span class="line">  kafka &#123;</span><br><span class="line">    topic_id =&gt; &quot;biz-logs&quot;</span><br><span class="line">    bootstrap_servers =&gt; &quot;ka:9092&quot;</span><br><span class="line">    codec =&gt; &quot;json&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>启动logstash（执行命令需要在上面配置文件同一个目录下，windows系统把$PWD改成配置文件所在目录的绝对路径）</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --rm -v &quot;$PWD&quot;:/config-dir -p 10800:10800/udp -p 10800:10800/tcp -p 12201:12201/udp --link kafka:ka logstash -f /config-dir/udp-kafka.conf</span><br></pre></td></tr></table></figure></li></ol><h2 id="三-logback-日志输出"><a href="#三-logback-日志输出" class="headerlink" title="三. logback 日志输出"></a>三. logback 日志输出</h2><h3 id="前置"><a href="#前置" class="headerlink" title="前置"></a>前置</h3><ol><li><p>配置appName,在pom文件中增加</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;properties&gt;</span><br><span class="line">    &lt;appName&gt;authority&lt;/appName&gt;</span><br><span class="line">&lt;/properties&gt;</span><br></pre></td></tr></table></figure></li><li><p>在.gitignore文件中添加忽略</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logs/</span><br></pre></td></tr></table></figure></li><li><p>日志数据</p></li></ol><ul><li>默认已有数据</li></ul><table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>@timestamp</td><td>Time of the log event. (yyyy-MM-dd’T’HH:mm:ss.SSSZZ) See customizing timezone.</td></tr><tr><td>@version</td><td>Logstash format version (e.g. 1) See customizing version.</td></tr><tr><td>message</td><td>Formatted log message of the event</td></tr><tr><td>logger_name</td><td>Name of the logger that logged the event</td></tr><tr><td>thread_name</td><td>Name of the thread that logged the event</td></tr><tr><td>level</td><td>String name of the level of the event</td></tr><tr><td>level_value</td><td>Integer value of the level of the event</td></tr><tr><td>stack_trace</td><td>(Only if a throwable was logged) The stacktrace of the throwable. Stackframes are separated by line endings.</td></tr><tr><td>tags</td><td>(Only if tags are found) The names of any markers not explicitly handled. (e.g. markers from MarkerFactory.getMarker will be included as tags, but the markers from Markers will not.)</td></tr></tbody></table><ul><li>打开includeCallerData</li></ul><table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>caller_class_name</td><td>Fully qualified class name of the class that logged the event</td></tr><tr><td>caller_method_name</td><td>Name of the method that logged the event</td></tr><tr><td>caller_file_name</td><td>Name of the file that logged the event</td></tr><tr><td>caller_line_number</td><td>Line number of the file where the event was logged</td></tr></tbody></table><h3 id="（一）配置日志本地输出"><a href="#（一）配置日志本地输出" class="headerlink" title="（一）配置日志本地输出"></a>（一）配置日志本地输出</h3><ol><li><p>配置pom文件，确定输出路径</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 线上环境 --&gt;</span><br><span class="line">&lt;!-- 日志存放地址 --&gt;</span><br><span class="line">&lt;logging.path&gt;/data/logs/$&#123;appName&#125;&lt;/logging.path&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 本地环境 --&gt;</span><br><span class="line">&lt;!-- 日志存放地址 --&gt;</span><br><span class="line">&lt;logging.path&gt;$&#123;basedir&#125;/logs&lt;/logging.path&gt;</span><br></pre></td></tr></table></figure></li><li><p>配置logback.xml，添加console输出</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;appender name=&quot;consoleRolling&quot; class=&quot;ch.qos.logback.core.ConsoleAppender&quot;&gt;</span><br><span class="line">    &lt;encoder&gt;</span><br><span class="line">        &lt;pattern&gt;$&#123;CONSOLE_LOG_PATTERN&#125;&lt;/pattern&gt;</span><br><span class="line">        &lt;charset&gt;utf8&lt;/charset&gt;</span><br><span class="line">    &lt;/encoder&gt;</span><br><span class="line">&lt;/appender&gt;</span><br></pre></td></tr></table></figure></li><li><p>配置logback.xml，添加本地日志输出</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;appender name=&quot;dailyRollingFile&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</span><br><span class="line">    &lt;File&gt;$&#123;logging.path&#125;/app.log&lt;/File&gt;</span><br><span class="line">    &lt;!-- rollingPolicy下面两种配置都是可以的，上面那种更简洁一点 --&gt;</span><br><span class="line">    &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy&quot;&gt;</span><br><span class="line">        &lt;!-- daily rollover --&gt;</span><br><span class="line">        &lt;fileNamePattern&gt;$&#123;logging.path&#125;/app.%d&#123;yyyy-MM-dd&#125;.%i.log&lt;/fileNamePattern&gt;</span><br><span class="line">        &lt;maxHistory&gt;30&lt;/maxHistory&gt;</span><br><span class="line">        &lt;maxFileSize&gt;50MB&lt;/maxFileSize&gt;</span><br><span class="line">    &lt;/rollingPolicy&gt;</span><br><span class="line">    &lt;!--&lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;fileNamePattern&gt;$&#123;logging.path&#125;/app-%d&#123;yyyyMMdd&#125;.%i.log&lt;/fileNamePattern&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;timeBasedFileNamingAndTriggeringPolicy class=&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;&gt;--&gt;</span><br><span class="line">            &lt;!--&lt;maxFileSize&gt;50MB&lt;/maxFileSize&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;/timeBasedFileNamingAndTriggeringPolicy&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;maxHistory&gt;30&lt;/maxHistory&gt;--&gt;</span><br><span class="line">    &lt;!--&lt;/rollingPolicy&gt;--&gt;</span><br><span class="line">    &lt;encoder&gt;</span><br><span class="line">        &lt;!--</span><br><span class="line">        %d&#123;HH:mm:ss.SSS&#125;——日志输出时间，因为每个文件都是按天存放的，所以没必要再输出年月日</span><br><span class="line">        %X&#123;traceId&#125;/%X&#123;spanId&#125;——预留</span><br><span class="line">        $&#123;appName&#125;——pom文件中定义的应用名</span><br><span class="line">        %thread——输出日志的进程名字，这在Web应用以及异步任务处理中很有用</span><br><span class="line">        %-5level——日志级别，并且使用5个字符靠左对齐</span><br><span class="line">        %logger&#123;36&#125;——日志输出者的名字</span><br><span class="line">        %msg——日志消息</span><br><span class="line">        %n——平台的换行符</span><br><span class="line">        --&gt;</span><br><span class="line">        &lt;pattern&gt;%d&#123;HH:mm:ss.SSS&#125; [%X&#123;traceId&#125;/%X&#123;spanId&#125;] $&#123;appName&#125; [%thread] %-5level %logger&#123;35&#125; - %msg %n&lt;/pattern&gt;</span><br><span class="line">    &lt;/encoder&gt;</span><br><span class="line">&lt;/appender&gt;</span><br></pre></td></tr></table></figure></li><li><p>启动项目，看到日志输出</p><ol><li>日志文件输出</li></ol> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">15:36:58.036 [/] authority [main] INFO  org.hibernate.Version - HHH000412: Hibernate Core &#123;5.0.12.Final&#125;</span><br><span class="line">15:36:58.038 [/] authority [main] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found</span><br><span class="line">15:36:58.039 [/] authority [main] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist</span><br><span class="line">15:36:58.090 [/] authority [main] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations &#123;5.0.1.Final&#125;</span><br><span class="line">15:36:58.251 [/] authority [main] INFO  c.a.druid.pool.DruidDataSource - &#123;dataSource-1&#125; inited</span><br><span class="line">15:36:58.895 [/] authority [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect</span><br><span class="line">15:36:59.373 [/] authority [main] INFO  o.h.tool.hbm2ddl.SchemaUpdate - HHH000228: Running hbm2ddl schema update</span><br><span class="line">15:37:21.387 [/] authority [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit &#x27;default&#x27;</span><br><span class="line">15:37:21.540 [/] authority [main] INFO  org.redisson.Version - Redisson 2.3.0</span><br><span class="line">15:37:21.661 [/] authority [nioEventLoopGroup-2-7] INFO  o.r.c.p.SinglePubSubConnectionPool - 1 connections initialized for /192.168.1.204:6379</span><br><span class="line">15:37:21.662 [/] authority [nioEventLoopGroup-2-2] INFO  o.r.c.pool.MasterConnectionPool - 5 connections initialized for /192.168.1.204:6379</span><br></pre></td></tr></table></figure><ol start="2"><li>console输出</li></ol> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">2017-11-21 15:36:58.036  INFO 1899 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate Core &#123;5.0.12.Final&#125;</span><br><span class="line">2017-11-21 15:36:58.038  INFO 1899 --- [           main] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found</span><br><span class="line">2017-11-21 15:36:58.039  INFO 1899 --- [           main] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist</span><br><span class="line">2017-11-21 15:36:58.090  INFO 1899 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations &#123;5.0.1.Final&#125;</span><br><span class="line">2017-11-21 15:36:58.251  INFO 1899 --- [           main] com.alibaba.druid.pool.DruidDataSource   : &#123;dataSource-1&#125; inited</span><br><span class="line">2017-11-21 15:36:58.895  INFO 1899 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect</span><br><span class="line">2017-11-21 15:36:59.373  INFO 1899 --- [           main] org.hibernate.tool.hbm2ddl.SchemaUpdate  : HHH000228: Running hbm2ddl schema update</span><br><span class="line">2017-11-21 15:37:21.387  INFO 1899 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit &#x27;default&#x27;</span><br><span class="line">2017-11-21 15:37:21.540  INFO 1899 --- [           main] org.redisson.Version                     : Redisson 2.3.0</span><br><span class="line">2017-11-21 15:37:21.661  INFO 1899 --- [ntLoopGroup-2-7] o.r.c.pool.SinglePubSubConnectionPool    : 1 connections initialized for /192.168.1.204:6379</span><br><span class="line">2017-11-21 15:37:21.662  INFO 1899 --- [ntLoopGroup-2-2] o.r.c.pool.MasterConnectionPool          : 5 connections initialized for /192.168.1.204:6379</span><br></pre></td></tr></table></figure></li></ol><h3 id="（二）使用udp输出到logstash"><a href="#（二）使用udp输出到logstash" class="headerlink" title="（二）使用udp输出到logstash"></a>（二）使用udp输出到logstash</h3><blockquote><p>mdc默认添加到json输出的日志里</p></blockquote><ol><li><p>添加依赖</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;net.logstash.logback&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;logstash-logback-encoder&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;4.11&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></li><li><p>配置logback.xml，加上以下内容（通过udp协议发送到logstash，其他的方式参考 <a href="https://github.com/logstash/logstash-logback-encoder/tree/logstash-logback-encoder-4.11">https://github.com/logstash/logstash-logback-encoder/tree/logstash-logback-encoder-4.11</a> ）</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;appender name=&quot;stash&quot; class=&quot;net.logstash.logback.appender.LogstashSocketAppender&quot;&gt;</span><br><span class="line">    &lt;port&gt;10800&lt;/port&gt;/</span><br><span class="line">    &lt;includeCallerData&gt;true&lt;/includeCallerData&gt;</span><br><span class="line">    &lt;customFields&gt;&#123;&quot;app_name&quot;:&quot;authority&quot;&#125;&lt;/customFields&gt;</span><br><span class="line">&lt;/appender&gt;</span><br></pre></td></tr></table></figure></li><li><p>启动项目，看到日志输出</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">      &quot;caller_file_name&quot; =&gt; &quot;DruidDataSource.java&quot;,</span><br><span class="line">                 &quot;level&quot; =&gt; &quot;INFO&quot;,</span><br><span class="line">    &quot;caller_line_number&quot; =&gt; 1658,</span><br><span class="line">               &quot;message&quot; =&gt; &quot;&#123;dataSource-1&#125; closed&quot;,</span><br><span class="line">                  &quot;type&quot; =&gt; &quot;docker&quot;,</span><br><span class="line">    &quot;caller_method_name&quot; =&gt; &quot;close&quot;,</span><br><span class="line">            &quot;@timestamp&quot; =&gt; 2017-11-16T08:39:49.543Z,</span><br><span class="line">              &quot;app_name&quot; =&gt; &quot;authority&quot;,</span><br><span class="line">     &quot;caller_class_name&quot; =&gt; &quot;com.alibaba.druid.pool.DruidDataSource&quot;,</span><br><span class="line">           &quot;thread_name&quot; =&gt; &quot;Thread-69&quot;,</span><br><span class="line">           &quot;level_value&quot; =&gt; 20000,</span><br><span class="line">              &quot;@version&quot; =&gt; 1,</span><br><span class="line">                  &quot;host&quot; =&gt; &quot;172.17.0.1&quot;,</span><br><span class="line">           &quot;logger_name&quot; =&gt; &quot;com.alibaba.druid.pool.DruidDataSource&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">      &quot;caller_file_name&quot; =&gt; &quot;SpringApplication.java&quot;,</span><br><span class="line">                 &quot;level&quot; =&gt; &quot;ERROR&quot;,</span><br><span class="line">    &quot;caller_line_number&quot; =&gt; 771,</span><br><span class="line">               &quot;message&quot; =&gt; &quot;Application startup failed&quot;,</span><br><span class="line">                  &quot;type&quot; =&gt; &quot;docker&quot;,</span><br><span class="line">    &quot;caller_method_name&quot; =&gt; &quot;reportFailure&quot;,</span><br><span class="line">            &quot;@timestamp&quot; =&gt; 2017-11-16T08:39:47.303Z,</span><br><span class="line">              &quot;app_name&quot; =&gt; &quot;authority&quot;,</span><br><span class="line">     &quot;caller_class_name&quot; =&gt; &quot;org.springframework.boot.SpringApplication&quot;,</span><br><span class="line">           &quot;thread_name&quot; =&gt; &quot;main&quot;,</span><br><span class="line">           &quot;level_value&quot; =&gt; 40000,</span><br><span class="line">              &quot;@version&quot; =&gt; 1,</span><br><span class="line">                  &quot;host&quot; =&gt; &quot;172.17.0.1&quot;,</span><br><span class="line">           &quot;logger_name&quot; =&gt; &quot;org.springframework.boot.SpringApplication&quot;,</span><br><span class="line">           &quot;stack_trace&quot; =&gt; &quot;java.lang.IllegalStateException: Failed to execute CommandLineRunner\n\tat org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:735)\n\tat org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:716)\n\tat org.springframework.boot.SpringApplication.afterRefresh(SpringApplication.java:703)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:304)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)\n\tat com.yudianbank.project.YdjfBootAuthorityApplication.main(YdjfBootAuthorityApplication.java:20)\nCaused by: org.redisson.client.RedisException: Unexpected exception while processing command\n\tat org.redisson.command.CommandAsyncService.convertException(CommandAsyncService.java:267)\n\tat org.redisson.command.CommandAsyncService.get(CommandAsyncService.java:112)\n\tat org.redisson.RedissonObject.get(RedissonObject.java:55)\n\tat org.redisson.RedissonMapCache.scanIterator(RedissonMapCache.java:611)\n\tat org.redisson.RedissonMapIterator.iterator(RedissonMapIterator.java:32)\n\tat org.redisson.RedissonBaseMapIterator.hasNext(RedissonBaseMapIterator.java:66)\n\tat org.redisson.RedissonMapIterator.hasNext(RedissonMapIterator.java:23)\n\tat java.util.concurrent.ConcurrentMap.forEach(ConcurrentMap.java:104)\n\tat com.yudianbank.project.service.Impl.RedisServiceImpl.putClientRMapCache(RedisServiceImpl.java:132)\n\tat com.yudianbank.project.startup.InitRedisData.lambda$initAllClientData$5(InitRedisData.java:229)\n\tat java.util.HashMap.forEach(HashMap.java:1289)\n\tat com.yudianbank.project.startup.InitRedisData.initAllClientData(InitRedisData.java:228)\n\tat com.yudianbank.project.startup.InitRedisData.run(InitRedisData.java:107)\n\tat org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:732)\n\t... 6 common frames omitted\nCaused by: org.redisson.RedissonShutdownException: Redisson is shutdown\n\tat org.redisson.command.CommandAsyncService.async(CommandAsyncService.java:425)\n\tat org.redisson.command.CommandAsyncService.evalAsync(CommandAsyncService.java:401)\n\tat org.redisson.command.CommandAsyncService.evalReadAsync(CommandAsyncService.java:337)\n\tat org.redisson.RedissonMapCache.scanIterator(RedissonMapCache.java:537)\n\t... 16 common frames omitted\n&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="（三）使用tcp输出到logstash"><a href="#（三）使用tcp输出到logstash" class="headerlink" title="（三）使用tcp输出到logstash"></a>（三）使用tcp输出到logstash</h3><blockquote><p>mdc默认添加到json输出的日志里</p></blockquote><ol><li><p>添加依赖</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;net.logstash.logback&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;logstash-logback-encoder&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;4.11&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></li><li><p>配置logback.xml，加上以下内容（通过tcp协议发送到logstash，其他的方式参考 <a href="https://github.com/logstash/logstash-logback-encoder/tree/logstash-logback-encoder-4.11">https://github.com/logstash/logstash-logback-encoder/tree/logstash-logback-encoder-4.11</a> ）</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;appender name=&quot;stash&quot; class=&quot;net.logstash.logback.appender.LogstashTcpSocketAppender&quot;&gt;</span><br><span class="line">    &lt;destination&gt;127.0.0.1:10800&lt;/destination&gt;</span><br><span class="line">    &lt;!-- encoder is required --&gt;</span><br><span class="line">    &lt;encoder class=&quot;net.logstash.logback.encoder.LogstashEncoder&quot;&gt;</span><br><span class="line">        &lt;includeCallerData&gt;true&lt;/includeCallerData&gt;</span><br><span class="line">        &lt;customFields&gt;&#123;&quot;app_name&quot;:&quot;$&#123;appName&#125;&quot;&#125;&lt;/customFields&gt;</span><br><span class="line">    &lt;/encoder&gt;</span><br><span class="line">&lt;/appender&gt;</span><br></pre></td></tr></table></figure></li><li><p>启动项目，看到日志输出</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">      &quot;caller_file_name&quot; =&gt; &quot;DruidDataSource.java&quot;,</span><br><span class="line">                 &quot;level&quot; =&gt; &quot;INFO&quot;,</span><br><span class="line">    &quot;caller_line_number&quot; =&gt; 1658,</span><br><span class="line">               &quot;message&quot; =&gt; &quot;&#123;dataSource-1&#125; closed&quot;,</span><br><span class="line">                  &quot;type&quot; =&gt; &quot;docker&quot;,</span><br><span class="line">    &quot;caller_method_name&quot; =&gt; &quot;close&quot;,</span><br><span class="line">            &quot;@timestamp&quot; =&gt; 2017-11-16T08:39:49.543Z,</span><br><span class="line">              &quot;app_name&quot; =&gt; &quot;authority&quot;,</span><br><span class="line">     &quot;caller_class_name&quot; =&gt; &quot;com.alibaba.druid.pool.DruidDataSource&quot;,</span><br><span class="line">           &quot;thread_name&quot; =&gt; &quot;Thread-69&quot;,</span><br><span class="line">           &quot;level_value&quot; =&gt; 20000,</span><br><span class="line">              &quot;@version&quot; =&gt; 1,</span><br><span class="line">                  &quot;host&quot; =&gt; &quot;172.17.0.1&quot;,</span><br><span class="line">           &quot;logger_name&quot; =&gt; &quot;com.alibaba.druid.pool.DruidDataSource&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">      &quot;caller_file_name&quot; =&gt; &quot;SpringApplication.java&quot;,</span><br><span class="line">                 &quot;level&quot; =&gt; &quot;ERROR&quot;,</span><br><span class="line">    &quot;caller_line_number&quot; =&gt; 771,</span><br><span class="line">               &quot;message&quot; =&gt; &quot;Application startup failed&quot;,</span><br><span class="line">                  &quot;type&quot; =&gt; &quot;docker&quot;,</span><br><span class="line">    &quot;caller_method_name&quot; =&gt; &quot;reportFailure&quot;,</span><br><span class="line">            &quot;@timestamp&quot; =&gt; 2017-11-16T08:39:47.303Z,</span><br><span class="line">              &quot;app_name&quot; =&gt; &quot;authority&quot;,</span><br><span class="line">     &quot;caller_class_name&quot; =&gt; &quot;org.springframework.boot.SpringApplication&quot;,</span><br><span class="line">           &quot;thread_name&quot; =&gt; &quot;main&quot;,</span><br><span class="line">           &quot;level_value&quot; =&gt; 40000,</span><br><span class="line">              &quot;@version&quot; =&gt; 1,</span><br><span class="line">                  &quot;host&quot; =&gt; &quot;172.17.0.1&quot;,</span><br><span class="line">           &quot;logger_name&quot; =&gt; &quot;org.springframework.boot.SpringApplication&quot;,</span><br><span class="line">           &quot;stack_trace&quot; =&gt; &quot;java.lang.IllegalStateException: Failed to execute CommandLineRunner\n\tat org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:735)\n\tat org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:716)\n\tat org.springframework.boot.SpringApplication.afterRefresh(SpringApplication.java:703)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:304)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)\n\tat com.yudianbank.project.YdjfBootAuthorityApplication.main(YdjfBootAuthorityApplication.java:20)\nCaused by: org.redisson.client.RedisException: Unexpected exception while processing command\n\tat org.redisson.command.CommandAsyncService.convertException(CommandAsyncService.java:267)\n\tat org.redisson.command.CommandAsyncService.get(CommandAsyncService.java:112)\n\tat org.redisson.RedissonObject.get(RedissonObject.java:55)\n\tat org.redisson.RedissonMapCache.scanIterator(RedissonMapCache.java:611)\n\tat org.redisson.RedissonMapIterator.iterator(RedissonMapIterator.java:32)\n\tat org.redisson.RedissonBaseMapIterator.hasNext(RedissonBaseMapIterator.java:66)\n\tat org.redisson.RedissonMapIterator.hasNext(RedissonMapIterator.java:23)\n\tat java.util.concurrent.ConcurrentMap.forEach(ConcurrentMap.java:104)\n\tat com.yudianbank.project.service.Impl.RedisServiceImpl.putClientRMapCache(RedisServiceImpl.java:132)\n\tat com.yudianbank.project.startup.InitRedisData.lambda$initAllClientData$5(InitRedisData.java:229)\n\tat java.util.HashMap.forEach(HashMap.java:1289)\n\tat com.yudianbank.project.startup.InitRedisData.initAllClientData(InitRedisData.java:228)\n\tat com.yudianbank.project.startup.InitRedisData.run(InitRedisData.java:107)\n\tat org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:732)\n\t... 6 common frames omitted\nCaused by: org.redisson.RedissonShutdownException: Redisson is shutdown\n\tat org.redisson.command.CommandAsyncService.async(CommandAsyncService.java:425)\n\tat org.redisson.command.CommandAsyncService.evalAsync(CommandAsyncService.java:401)\n\tat org.redisson.command.CommandAsyncService.evalReadAsync(CommandAsyncService.java:337)\n\tat org.redisson.RedissonMapCache.scanIterator(RedissonMapCache.java:537)\n\t... 16 common frames omitted\n&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="（四）access日志"><a href="#（四）access日志" class="headerlink" title="（四）access日志"></a>（四）access日志</h3><blockquote><p>每次请求的具体数据</p></blockquote><h4 id="能输出的数据"><a href="#能输出的数据" class="headerlink" title="能输出的数据"></a>能输出的数据</h4><table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>@timestamp</td><td>Time of the log event. (yyyy-MM-dd’T’HH:mm:ss.SSSZZ) See customizing timezone.</td></tr><tr><td>@version</td><td>Logstash format version (e.g. 1) See customizing version.</td></tr><tr><td>@message</td><td>Message in the form ${remoteHost} - ${remoteUser} [${timestamp}] “${requestUrl}” ${statusCode} ${contentLength}</td></tr><tr><td>@fields.method</td><td>HTTP method</td></tr><tr><td>@fields.protocol</td><td>HTTP protocol</td></tr><tr><td>@fields.status_code</td><td>HTTP status code</td></tr><tr><td>@fields.requested_url</td><td>Request URL</td></tr><tr><td>@fields.requested_uri</td><td>Request URI</td></tr><tr><td>@fields.remote_host</td><td>Remote host</td></tr><tr><td>@fields.HOSTNAME</td><td>another field for remote host (not sure why this is here honestly)</td></tr><tr><td>@fields.remote_user</td><td>Remote user</td></tr><tr><td>@fields.content_length</td><td>Content length</td></tr><tr><td>@fields.elapsed_time</td><td>Elapsed time in millis</td></tr></tbody></table><h3 id="（五）完整版配置参考"><a href="#（五）完整版配置参考" class="headerlink" title="（五）完整版配置参考"></a>（五）完整版配置参考</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;include resource=&quot;org/springframework/boot/logging/logback/defaults.xml&quot;/&gt;</span><br><span class="line">    &lt;appender name=&quot;dailyRollingFile&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;File&gt;$&#123;logging.path&#125;/app.log&lt;/File&gt;</span><br><span class="line">        &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy&quot;&gt;</span><br><span class="line">            &lt;!-- daily rollover --&gt;</span><br><span class="line">            &lt;fileNamePattern&gt;$&#123;logging.path&#125;/app.%d&#123;yyyy-MM-dd&#125;.%i.log&lt;/fileNamePattern&gt;</span><br><span class="line">            &lt;maxHistory&gt;30&lt;/maxHistory&gt;</span><br><span class="line">            &lt;maxFileSize&gt;50MB&lt;/maxFileSize&gt;</span><br><span class="line">        &lt;/rollingPolicy&gt;</span><br><span class="line">        &lt;!--&lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;--&gt;</span><br><span class="line">            &lt;!--&lt;fileNamePattern&gt;$&#123;logging.path&#125;/app-%d&#123;yyyyMMdd&#125;.%i.log&lt;/fileNamePattern&gt;--&gt;</span><br><span class="line">            &lt;!--&lt;timeBasedFileNamingAndTriggeringPolicy class=&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;&gt;--&gt;</span><br><span class="line">                &lt;!--&lt;maxFileSize&gt;50MB&lt;/maxFileSize&gt;--&gt;</span><br><span class="line">            &lt;!--&lt;/timeBasedFileNamingAndTriggeringPolicy&gt;--&gt;</span><br><span class="line">            &lt;!--&lt;maxHistory&gt;30&lt;/maxHistory&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;/rollingPolicy&gt;--&gt;</span><br><span class="line">        &lt;encoder&gt;</span><br><span class="line">            &lt;!--</span><br><span class="line">            %d&#123;HH:mm:ss.SSS&#125;——日志输出时间</span><br><span class="line">            %X&#123;traceId&#125;/%X&#123;spanId&#125;——预留</span><br><span class="line">            $&#123;appName&#125;——pom文件中定义的应用名</span><br><span class="line">            %thread——输出日志的进程名字，这在Web应用以及异步任务处理中很有用</span><br><span class="line">            %-5level——日志级别，并且使用5个字符靠左对齐</span><br><span class="line">            %logger&#123;36&#125;——日志输出者的名字</span><br><span class="line">            %msg——日志消息</span><br><span class="line">            %n——平台的换行符</span><br><span class="line">            --&gt;</span><br><span class="line">            &lt;pattern&gt;%d&#123;HH:mm:ss.SSS&#125; [%X&#123;traceId&#125;/%X&#123;spanId&#125;] $&#123;appName&#125; [%thread] %-5level %logger&#123;35&#125; - %msg %n&lt;/pattern&gt;</span><br><span class="line">        &lt;/encoder&gt;</span><br><span class="line">    &lt;/appender&gt;</span><br><span class="line"></span><br><span class="line">    &lt;appender name=&quot;consoleRolling&quot; class=&quot;ch.qos.logback.core.ConsoleAppender&quot;&gt;</span><br><span class="line">        &lt;encoder&gt;</span><br><span class="line">            &lt;pattern&gt;$&#123;CONSOLE_LOG_PATTERN&#125;&lt;/pattern&gt;</span><br><span class="line">            &lt;charset&gt;utf8&lt;/charset&gt;</span><br><span class="line">        &lt;/encoder&gt;</span><br><span class="line">    &lt;/appender&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;appender name=&quot;stash&quot; class=&quot;net.logstash.logback.appender.LogstashSocketAppender&quot;&gt;</span><br><span class="line">        &lt;port&gt;10800&lt;/port&gt;/</span><br><span class="line">        &lt;includeCallerData&gt;true&lt;/includeCallerData&gt;</span><br><span class="line">        &lt;customFields&gt;&#123;&quot;app_name&quot;:&quot;authority&quot;&#125;&lt;/customFields&gt;</span><br><span class="line">    &lt;/appender&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--&lt;appender name=&quot;stash&quot; class=&quot;net.logstash.logback.appender.LogstashTcpSocketAppender&quot;&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;destination&gt;127.0.0.1:10800&lt;/destination&gt;--&gt;</span><br><span class="line">        &lt;!--&amp;lt;!&amp;ndash; encoder is required &amp;ndash;&amp;gt;--&gt;</span><br><span class="line">        &lt;!--&lt;encoder class=&quot;net.logstash.logback.encoder.LogstashEncoder&quot;&gt;--&gt;</span><br><span class="line">            &lt;!--&lt;includeCallerData&gt;true&lt;/includeCallerData&gt;--&gt;</span><br><span class="line">            &lt;!--&lt;customFields&gt;&#123;&quot;app_name&quot;:&quot;$&#123;appName&#125;&quot;&#125;&lt;/customFields&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;/encoder&gt;--&gt;</span><br><span class="line">    &lt;!--&lt;/appender&gt;--&gt;</span><br><span class="line"></span><br><span class="line">    &lt;logger name=&quot;com.yudianbank&quot; level=&quot;DEBUG&quot; additivity=&quot;false&quot;&gt;</span><br><span class="line">        &lt;appender-ref ref=&quot;dailyRollingFile&quot;/&gt;</span><br><span class="line">        &lt;appender-ref ref=&quot;consoleRolling&quot;/&gt;</span><br><span class="line">        &lt;appender-ref ref=&quot;stash&quot;/&gt;</span><br><span class="line">    &lt;/logger&gt;</span><br><span class="line"></span><br><span class="line">    &lt;root level=&quot;INFO&quot;&gt;</span><br><span class="line">        &lt;appender-ref ref=&quot;dailyRollingFile&quot;/&gt;</span><br><span class="line">        &lt;appender-ref ref=&quot;consoleRolling&quot;/&gt;</span><br><span class="line">        &lt;appender-ref ref=&quot;stash&quot;/&gt;</span><br><span class="line">    &lt;/root&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><h2 id="四-log4j2-日志输出"><a href="#四-log4j2-日志输出" class="headerlink" title="四. log4j2 日志输出"></a>四. log4j2 日志输出</h2><h3 id="前置-1"><a href="#前置-1" class="headerlink" title="前置"></a>前置</h3><ol><li><p>配置appName,在pom文件中增加</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;properties&gt;</span><br><span class="line">    &lt;appName&gt;authority&lt;/appName&gt;</span><br><span class="line">&lt;/properties&gt;</span><br></pre></td></tr></table></figure></li><li><p>在.gitignore文件中添加忽略</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logs/</span><br></pre></td></tr></table></figure></li></ol><h3 id="（一）配置日志本地输出-1"><a href="#（一）配置日志本地输出-1" class="headerlink" title="（一）配置日志本地输出"></a>（一）配置日志本地输出</h3><ol><li><p>配置pom文件，确定输出路径</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 线上环境 --&gt;</span><br><span class="line">&lt;!-- 日志存放地址 --&gt;</span><br><span class="line">&lt;logging.path&gt;/data/logs/$&#123;appName&#125;&lt;/logging.path&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 本地环境 --&gt;</span><br><span class="line">&lt;!-- 日志存放地址 --&gt;</span><br><span class="line">&lt;logging.path&gt;$&#123;basedir&#125;/logs&lt;/logging.path&gt;</span><br></pre></td></tr></table></figure></li><li><p>log4j2.xml，添加console输出</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 输出到控制台 --&gt;</span><br><span class="line">&lt;Console name=&quot;Console&quot; target=&quot;SYSTEM_OUT&quot; ignoreExceptions=&quot;false&quot;&gt;</span><br><span class="line">    &lt;!-- 需要记录的级别 --&gt;</span><br><span class="line">    &lt;ThresholdFilter level=&quot;debug&quot; onMatch=&quot;ACCEPT&quot; onMismatch=&quot;DENY&quot;/&gt;</span><br><span class="line">    &lt;!--&lt;PatternLayout pattern=&quot;%d&#123;yyyy-MM-dd HH:mm:ss,SSS&#125;:%4p %t (%F:%L) - %m%n&quot;/&gt;--&gt;</span><br><span class="line">    &lt;PatternLayout pattern=&quot;%d [%X&#123;traceId&#125;/%X&#123;spanId&#125;] [%thread] %-5level %logger&#123;36&#125; - %msg%n&quot;/&gt;</span><br><span class="line">&lt;/Console&gt;</span><br></pre></td></tr></table></figure></li><li><p>配置log4j2.xml，添加本地日志输出</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;RollingFile name=&quot;dailyRollingFile&quot; immediateFlush=&quot;true&quot;</span><br><span class="line">             fileName=&quot;$&#123;logging.path&#125;/app.log&quot; filePattern=&quot;$&#123;logging.path&#125;/app.%d&#123;yyyy-MM-dd&#125;.%i.log&quot;&gt;</span><br><span class="line">    &lt;PatternLayout&gt;</span><br><span class="line">        &lt;pattern&gt;%d&#123;HH:mm:ss.SSS&#125; [%X&#123;traceId&#125;/%X&#123;spanId&#125;] $&#123;appName&#125; [%thread] %-5level %logger&#123;36&#125; - %msg%n&lt;/pattern&gt;</span><br><span class="line">    &lt;/PatternLayout&gt;</span><br><span class="line">    &lt;Policies&gt;</span><br><span class="line">        &lt;OnStartupTriggeringPolicy/&gt;</span><br><span class="line">        &lt;TimeBasedTriggeringPolicy/&gt;</span><br><span class="line">        &lt;!-- 每个日志文件最大50MB --&gt;</span><br><span class="line">        &lt;SizeBasedTriggeringPolicy size=&quot;50MB&quot; /&gt;</span><br><span class="line">    &lt;/Policies&gt;</span><br><span class="line">&lt;/RollingFile&gt;</span><br></pre></td></tr></table></figure></li><li><p>启动项目，看到日志输出</p><ol><li>日志文件输出</li></ol> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">13:48:07.950 [/] weixin [RMI TCP Connection(4)-127.0.0.1] INFO  com.yudianbank.framework.rpc.sdk.ConsumerInvokerListener - 队列boot.queue.com.yudianbank.api.service.api.ApiToFrontSerive创建成功！</span><br><span class="line">13:48:08.064 [/] weixin [RMI TCP Connection(4)-127.0.0.1] INFO  com.yudianbank.framework.rpc.sdk.ConsumerInvokerListener - 队列boot.queue.com.yudianbank.api.service.api.ApiToApproveService创建成功！</span><br><span class="line">13:48:08.120 [/] weixin [RMI TCP Connection(4)-127.0.0.1] INFO  com.yudianbank.framework.rpc.sdk.ConsumerInvokerListener - 队列boot.queue.com.yudianbank.api.service.AppMgmToWeixinService创建成功！</span><br><span class="line">13:48:08.703 [/] weixin [RMI TCP Connection(4)-127.0.0.1] INFO  com.yudianbank.common.config.RedissonConfigration - redisson.yaml &gt;&gt; content:&#123;&quot;singleServerConfig&quot;:&#123;&quot;idleConnectionTimeout&quot;:10000,&quot;pingTimeout&quot;:1000,&quot;connectTimeout&quot;:10000,&quot;timeout&quot;:3000,&quot;retryAttempts&quot;:3,&quot;retryInterval&quot;:1500,&quot;reconnectionTimeout&quot;:3000,&quot;failedAttempts&quot;:3,&quot;subscriptionsPerConnection&quot;:5,&quot;address&quot;:[&quot;//192.168.1.204:6379&quot;],&quot;subscriptionConnectionMinimumIdleSize&quot;:1,&quot;subscriptionConnectionPoolSize&quot;:50,&quot;connectionMinimumIdleSize&quot;:10,&quot;connectionPoolSize&quot;:64,&quot;database&quot;:0,&quot;dnsMonitoring&quot;:false,&quot;dnsMonitoringInterval&quot;:5000&#125;,&quot;threads&quot;:0,&quot;codec&quot;:&#123;&quot;class&quot;:&quot;org.redisson.codec.JsonJacksonCodec&quot;&#125;,&quot;useLinuxNativeEpoll&quot;:false&#125;</span><br><span class="line">13:48:13.204 [/] weixin [http-nio-8080-exec-1] INFO  com.yudianbank.common.web.filter.BackURLFilter - http://localhost:8080/ [GET]</span><br><span class="line">13:48:13.218 [/] weixin [http-nio-8080-exec-1] DEBUG com.yudianbank.common.web.filter.BackURLFilter - Request IP: 127.0.0.1</span><br><span class="line">13:48:13.221 [/] weixin [http-nio-8080-exec-1] DEBUG com.yudianbank.common.web.filter.BackURLFilter - Request Header:</span><br><span class="line">13:48:13.222 [/] weixin [http-nio-8080-exec-1] DEBUG com.yudianbank.common.web.filter.BackURLFilter -  user-agent = IntelliJ IDEA/172.4343.14</span><br><span class="line">13:48:13.223 [/] weixin [http-nio-8080-exec-1] DEBUG com.yudianbank.common.web.filter.BackURLFilter -  accept-encoding = gzip</span><br><span class="line">13:48:13.224 [/] weixin [http-nio-8080-exec-1] DEBUG com.yudianbank.common.web.filter.BackURLFilter -  cache-control = no-cache</span><br><span class="line">13:48:13.225 [/] weixin [http-nio-8080-exec-1] DEBUG com.yudianbank.common.web.filter.BackURLFilter -  pragma = no-cache</span><br><span class="line">13:48:13.226 [/] weixin [http-nio-8080-exec-1] DEBUG com.yudianbank.common.web.filter.BackURLFilter -  host = localhost:8080</span><br><span class="line">13:48:13.227 [/] weixin [http-nio-8080-exec-1] DEBUG com.yudianbank.common.web.filter.BackURLFilter -  accept = text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2</span><br><span class="line">13:48:13.228 [/] weixin [http-nio-8080-exec-1] DEBUG com.yudianbank.common.web.filter.BackURLFilter -  connection = keep-alive</span><br></pre></td></tr></table></figure><ol start="2"><li>console输出</li></ol> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">2017-11-22 13:50:55.314 [/] [RMI TCP Connection(2)-127.0.0.1] INFO  com.yudianbank.framework.rpc.sdk.ConsumerInvokerListener - 队列boot.queue.com.yudianbank.api.service.api.ApiToFrontSerive创建成功！</span><br><span class="line">2017-11-22 13:50:55.469 [/] [RMI TCP Connection(2)-127.0.0.1] INFO  com.yudianbank.framework.rpc.sdk.ConsumerInvokerListener - 队列boot.queue.com.yudianbank.api.service.api.ApiToApproveService创建成功！</span><br><span class="line">2017-11-22 13:50:55.510 [/] [RMI TCP Connection(2)-127.0.0.1] INFO  com.yudianbank.framework.rpc.sdk.ConsumerInvokerListener - 队列boot.queue.com.yudianbank.api.service.AppMgmToWeixinService创建成功！</span><br><span class="line">2017-11-22 13:50:56.025 [/] [RMI TCP Connection(2)-127.0.0.1] INFO  com.yudianbank.common.config.RedissonConfigration - redisson.yaml &gt;&gt; content:&#123;&quot;singleServerConfig&quot;:&#123;&quot;idleConnectionTimeout&quot;:10000,&quot;pingTimeout&quot;:1000,&quot;connectTimeout&quot;:10000,&quot;timeout&quot;:3000,&quot;retryAttempts&quot;:3,&quot;retryInterval&quot;:1500,&quot;reconnectionTimeout&quot;:3000,&quot;failedAttempts&quot;:3,&quot;subscriptionsPerConnection&quot;:5,&quot;address&quot;:[&quot;//192.168.1.204:6379&quot;],&quot;subscriptionConnectionMinimumIdleSize&quot;:1,&quot;subscriptionConnectionPoolSize&quot;:50,&quot;connectionMinimumIdleSize&quot;:10,&quot;connectionPoolSize&quot;:64,&quot;database&quot;:0,&quot;dnsMonitoring&quot;:false,&quot;dnsMonitoringInterval&quot;:5000&#125;,&quot;threads&quot;:0,&quot;codec&quot;:&#123;&quot;class&quot;:&quot;org.redisson.codec.JsonJacksonCodec&quot;&#125;,&quot;useLinuxNativeEpoll&quot;:false&#125;</span><br><span class="line">[2017-11-22 01:51:00,500] Artifact root-weixin:war: Artifact is deployed successfully</span><br><span class="line">[2017-11-22 01:51:00,500] Artifact root-weixin:war: Deploy took 27,783 milliseconds</span><br><span class="line">2017-11-22 13:51:00.998 [/] [http-nio-8080-exec-1] INFO  com.yudianbank.common.web.filter.BackURLFilter - http://localhost:8080/ [GET]</span><br><span class="line">2017-11-22 13:51:01.010 [/] [http-nio-8080-exec-1] DEBUG com.yudianbank.common.web.filter.BackURLFilter - Request IP: 127.0.0.1</span><br><span class="line">2017-11-22 13:51:01.011 [/] [http-nio-8080-exec-1] DEBUG com.yudianbank.common.web.filter.BackURLFilter - Request Header:</span><br><span class="line">2017-11-22 13:51:01.011 [/] [http-nio-8080-exec-1] DEBUG com.yudianbank.common.web.filter.BackURLFilter -  user-agent = IntelliJ IDEA/172.4343.14</span><br><span class="line">2017-11-22 13:51:01.012 [/] [http-nio-8080-exec-1] DEBUG com.yudianbank.common.web.filter.BackURLFilter -  accept-encoding = gzip</span><br><span class="line">2017-11-22 13:51:01.012 [/] [http-nio-8080-exec-1] DEBUG com.yudianbank.common.web.filter.BackURLFilter -  cache-control = no-cache</span><br><span class="line">2017-11-22 13:51:01.012 [/] [http-nio-8080-exec-1] DEBUG com.yudianbank.common.web.filter.BackURLFilter -  pragma = no-cache</span><br><span class="line">2017-11-22 13:51:01.012 [/] [http-nio-8080-exec-1] DEBUG com.yudianbank.common.web.filter.BackURLFilter -  host = localhost:8080</span><br><span class="line">2017-11-22 13:51:01.012 [/] [http-nio-8080-exec-1] DEBUG com.yudianbank.common.web.filter.BackURLFilter -  accept = text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2</span><br><span class="line">2017-11-22 13:51:01.012 [/] [http-nio-8080-exec-1] DEBUG com.yudianbank.common.web.filter.BackURLFilter -  connection = keep-alive</span><br></pre></td></tr></table></figure></li></ol><h3 id="（二）使用gelf输出到logstash"><a href="#（二）使用gelf输出到logstash" class="headerlink" title="（二）使用gelf输出到logstash"></a>（二）使用gelf输出到logstash</h3><blockquote><p>mdc默认添加到json输出的日志里</p></blockquote><ol><li><p>添加依赖</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- logstash:UDP --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;biz.paluch.logging&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;logstash-gelf&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.11.1&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></li><li><p>配置log4j2.xml，加上以下内容</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--log4j2 logstash-gelf UDP 协议，自动重连 https://github.com/mp911de/logstash-gelf--&gt;</span><br><span class="line">&lt;Gelf name=&quot;gelf&quot; host=&quot;udp:localhost&quot; port=&quot;12201&quot; version=&quot;1.1&quot; extractStackTrace=&quot;true&quot;</span><br><span class="line">      filterStackTrace=&quot;true&quot; mdcProfiling=&quot;true&quot; includeFullMdc=&quot;true&quot; maximumMessageSize=&quot;8192&quot;</span><br><span class="line">      originHost=&quot;%host&#123;fqdn&#125;&quot; additionalFieldTypes=&quot;fieldName1=String,fieldName2=String&quot;&gt;</span><br><span class="line">    &lt;Field name=&quot;timestamp&quot; pattern=&quot;%d&#123;dd MMM yyyy HH:mm:ss.SSS&#125;&quot;/&gt;</span><br><span class="line">    &lt;Field name=&quot;level&quot; pattern=&quot;%level&quot;/&gt;</span><br><span class="line">    &lt;Field name=&quot;caller_class_name&quot; pattern=&quot;%C&quot;/&gt;</span><br><span class="line">    &lt;Field name=&quot;caller_line_number&quot; pattern=&quot;%L&quot;/&gt;</span><br><span class="line">    &lt;Field name=&quot;caller_method_name&quot; pattern=&quot;%M&quot;/&gt;</span><br><span class="line">    &lt;Field name=&quot;logger_name&quot; pattern=&quot;%c&quot;/&gt;</span><br><span class="line">    &lt;Field name=&quot;thread_name&quot; pattern=&quot;%t&quot;/&gt;</span><br><span class="line">    &lt;!--&lt;Field name=&quot;className&quot; pattern=&quot;%C&quot;/&gt;--&gt;</span><br><span class="line">    &lt;Field name=&quot;server&quot; pattern=&quot;%host&quot;/&gt;</span><br><span class="line">    &lt;Field name=&quot;server.fqdn&quot; pattern=&quot;%host&#123;fqdn&#125;&quot;/&gt;</span><br><span class="line">    &lt;!-- This is a static field --&gt;</span><br><span class="line">    &lt;!--&lt;Field name=&quot;fieldName2&quot; literal=&quot;fieldValue2&quot; /&gt;--&gt;</span><br><span class="line">    &lt;!-- This is a field using MDC --&gt;</span><br><span class="line">    &lt;!--&lt;Field name=&quot;traceId&quot; mdc=&quot;traceId&quot;/&gt;--&gt;</span><br><span class="line">    &lt;!--&lt;Field name=&quot;spanId&quot; mdc=&quot;spanId&quot;/&gt;--&gt;</span><br><span class="line">    &lt;Field name=&quot;app_name&quot; mdc=&quot;$&#123;appName&#125;&quot;/&gt;</span><br><span class="line">    &lt;DynamicMdcFields regex=&quot;mdc.*&quot;/&gt;</span><br><span class="line">    &lt;DynamicMdcFields regex=&quot;(mdc|MDC)fields&quot;/&gt;</span><br><span class="line">&lt;/Gelf&gt;</span><br></pre></td></tr></table></figure></li><li><p>启动项目，看到日志输出</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">                &quot;server&quot; =&gt; &quot;localhost&quot;,</span><br><span class="line">           &quot;source_host&quot; =&gt; &quot;172.17.0.1&quot;,</span><br><span class="line">                 &quot;level&quot; =&gt; &quot;INFO&quot;,</span><br><span class="line">    &quot;caller_line_number&quot; =&gt; 147,</span><br><span class="line">               &quot;message&quot; =&gt; &quot;队列boot.queue.com.yudianbank.api.service.api.ApiToApproveService创建成功！&quot;,</span><br><span class="line">                  &quot;type&quot; =&gt; &quot;docker&quot;,</span><br><span class="line">           &quot;server.fqdn&quot; =&gt; &quot;localhost&quot;,</span><br><span class="line">    &quot;caller_method_name&quot; =&gt; &quot;afterPropertiesSet&quot;,</span><br><span class="line">            &quot;@timestamp&quot; =&gt; 2017-11-22T07:08:02.822Z,</span><br><span class="line">     &quot;caller_class_name&quot; =&gt; &quot;com.yudianbank.framework.rpc.sdk.ConsumerInvokerListener&quot;,</span><br><span class="line">           &quot;thread_name&quot; =&gt; &quot;RMI TCP Connection(2)-127.0.0.1&quot;,</span><br><span class="line">                  &quot;host&quot; =&gt; &quot;localhost&quot;,</span><br><span class="line">              &quot;@version&quot; =&gt; &quot;1&quot;,</span><br><span class="line">           &quot;logger_name&quot; =&gt; &quot;com.yudianbank.framework.rpc.sdk.ConsumerInvokerListener&quot;,</span><br><span class="line">              &quot;facility&quot; =&gt; &quot;logstash-gelf&quot;,</span><br><span class="line">             &quot;timestamp&quot; =&gt; &quot;22 十一月 2017 15:08:02.822&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">                &quot;server&quot; =&gt; &quot;localhost&quot;,</span><br><span class="line">           &quot;source_host&quot; =&gt; &quot;172.17.0.1&quot;,</span><br><span class="line">                 &quot;level&quot; =&gt; &quot;INFO&quot;,</span><br><span class="line">    &quot;caller_line_number&quot; =&gt; 147,</span><br><span class="line">               &quot;message&quot; =&gt; &quot;队列boot.queue.com.yudianbank.api.service.AppMgmToWeixinService创建成功！&quot;,</span><br><span class="line">                  &quot;type&quot; =&gt; &quot;docker&quot;,</span><br><span class="line">           &quot;server.fqdn&quot; =&gt; &quot;localhost&quot;,</span><br><span class="line">    &quot;caller_method_name&quot; =&gt; &quot;afterPropertiesSet&quot;,</span><br><span class="line">            &quot;@timestamp&quot; =&gt; 2017-11-22T07:08:02.858Z,</span><br><span class="line">     &quot;caller_class_name&quot; =&gt; &quot;com.yudianbank.framework.rpc.sdk.ConsumerInvokerListener&quot;,</span><br><span class="line">           &quot;thread_name&quot; =&gt; &quot;RMI TCP Connection(2)-127.0.0.1&quot;,</span><br><span class="line">                  &quot;host&quot; =&gt; &quot;localhost&quot;,</span><br><span class="line">              &quot;@version&quot; =&gt; &quot;1&quot;,</span><br><span class="line">           &quot;logger_name&quot; =&gt; &quot;com.yudianbank.framework.rpc.sdk.ConsumerInvokerListener&quot;,</span><br><span class="line">              &quot;facility&quot; =&gt; &quot;logstash-gelf&quot;,</span><br><span class="line">             &quot;timestamp&quot; =&gt; &quot;22 十一月 2017 15:08:02.858&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="（三）完整版配置参考"><a href="#（三）完整版配置参考" class="headerlink" title="（三）完整版配置参考"></a>（三）完整版配置参考</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!-- Log4j 2.x 配置文件。每30秒自动检查和应用配置文件的更新； --&gt;</span><br><span class="line">&lt;Configuration status=&quot;WARN&quot; monitorInterval=&quot;30&quot; strict=&quot;true&quot; schema=&quot;Log4J-V2.2.xsd&quot;&gt;</span><br><span class="line">    &lt;Appenders&gt;</span><br><span class="line">        &lt;!-- 输出到控制台 --&gt;</span><br><span class="line">        &lt;Console name=&quot;Console&quot; target=&quot;SYSTEM_OUT&quot; ignoreExceptions=&quot;false&quot;&gt;</span><br><span class="line">            &lt;!-- 需要记录的级别 --&gt;</span><br><span class="line">            &lt;ThresholdFilter level=&quot;debug&quot; onMatch=&quot;ACCEPT&quot; onMismatch=&quot;DENY&quot;/&gt;</span><br><span class="line">            &lt;!--&lt;PatternLayout pattern=&quot;%d&#123;yyyy-MM-dd HH:mm:ss,SSS&#125;:%4p %t (%F:%L) - %m%n&quot;/&gt;--&gt;</span><br><span class="line">            &lt;PatternLayout pattern=&quot;%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%X&#123;traceId&#125;/%X&#123;spanId&#125;] [%thread] %-5level %logger&#123;36&#125; - %msg%n&quot;/&gt;</span><br><span class="line">        &lt;/Console&gt;</span><br><span class="line"></span><br><span class="line">        &lt;RollingFile name=&quot;dailyRollingFile&quot; immediateFlush=&quot;true&quot;</span><br><span class="line">                     fileName=&quot;$&#123;logging.path&#125;/app.log&quot; filePattern=&quot;$&#123;logging.path&#125;/app.%d&#123;yyyy-MM-dd&#125;.%i.log&quot;&gt;</span><br><span class="line">            &lt;PatternLayout&gt;</span><br><span class="line">                &lt;pattern&gt;%d&#123;HH:mm:ss.SSS&#125; [%X&#123;traceId&#125;/%X&#123;spanId&#125;] $&#123;appName&#125; [%thread] %-5level %logger&#123;36&#125; - %msg%n&lt;/pattern&gt;</span><br><span class="line">            &lt;/PatternLayout&gt;</span><br><span class="line">            &lt;Policies&gt;</span><br><span class="line">                &lt;OnStartupTriggeringPolicy/&gt;</span><br><span class="line">                &lt;TimeBasedTriggeringPolicy/&gt;</span><br><span class="line">                &lt;!-- 每个日志文件最大50MB --&gt;</span><br><span class="line">                &lt;SizeBasedTriggeringPolicy size=&quot;50MB&quot; /&gt;</span><br><span class="line">            &lt;/Policies&gt;</span><br><span class="line">        &lt;/RollingFile&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 输出到文件，按天或者超过80MB分割 logstash 每隔2秒去读取  验证 ok --&gt;</span><br><span class="line">        &lt;!--&lt;RollingFile name=&quot;RollingFile&quot; fileName=&quot;/data/logs/logstash.log&quot;--&gt;</span><br><span class="line">        &lt;!--filePattern=&quot;/data/logs/$$&#123;date:yyyy-MM&#125;/logstash-%d&#123;yyyy-MM-dd&#125;-%i.log.gz&quot;--&gt;</span><br><span class="line">        &lt;!--ignoreExceptions=&quot;false&quot;&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;JSONLayout complete=&quot;true&quot; includeStacktrace=&quot;true&quot; locationInfo=&quot;true&quot;/&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;Policies&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;OnStartupTriggeringPolicy/&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;TimeBasedTriggeringPolicy/&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;SizeBasedTriggeringPolicy size=&quot;80 MB&quot;/&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;/Policies&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;/RollingFile&gt;--&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 输出到 logstash,通过 TCP 协议, 这种方式有个缺点是断掉之后不会自动重连   验证 ok</span><br><span class="line">        Logstash提供了log4j输入插件，但是只能用于log4j1.x，不能用于log4j2，因此，我们在配置文件中使用tcp输入插件，关于该插件的参数解释，</span><br><span class="line">        详见：https://www.elastic.co/guide/en/logstash/current/plugins-inputs-tcp.html。</span><br><span class="line">        --&gt;</span><br><span class="line">        &lt;!--&lt;Socket name=&quot;logstash&quot; host=&quot;127.0.0.1&quot; port=&quot;5460&quot; protocol=&quot;TCP&quot;&gt;--&gt;</span><br><span class="line">            &lt;!--&lt;LogStashJSONLayout&gt;--&gt;</span><br><span class="line">                &lt;!--&lt;KeyValuePair key=&quot;application_name&quot; value=&quot;$&#123;sys:application.name&#125;&quot;/&gt;--&gt;</span><br><span class="line">                &lt;!--&lt;KeyValuePair key=&quot;application_version&quot; value=&quot;$&#123;sys:application.version&#125;&quot;/&gt;--&gt;</span><br><span class="line">                &lt;!--&lt;KeyValuePair key=&quot;environment_type&quot; value=&quot;$&#123;sys:deploy_env&#125;&quot;/&gt;--&gt;</span><br><span class="line">                &lt;!--&lt;KeyValuePair key=&quot;cluster_location&quot; value=&quot;$&#123;sys:cluster_location&#125;&quot;/&gt;--&gt;</span><br><span class="line">                &lt;!--&lt;KeyValuePair key=&quot;cluster_name&quot; value=&quot;$&#123;sys:cluster_name&#125;&quot;/&gt;--&gt;</span><br><span class="line">                &lt;!--&lt;KeyValuePair key=&quot;hostname&quot; value=&quot;$&#123;sys:hostname&#125;&quot;/&gt;--&gt;</span><br><span class="line">                &lt;!--&lt;KeyValuePair key=&quot;host_ip&quot; value=&quot;$&#123;sys:host_ip&#125;&quot;/&gt;--&gt;</span><br><span class="line">                &lt;!--&lt;KeyValuePair key=&quot;application_user&quot; value=&quot;$&#123;sys:user.name&#125;&quot;/&gt;--&gt;</span><br><span class="line">                &lt;!--&lt;KeyValuePair key=&quot;environment_user&quot; value=&quot;$&#123;env:USER&#125;&quot;/&gt;--&gt;</span><br><span class="line">            &lt;!--&lt;/LogStashJSONLayout&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;/Socket&gt;--&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 直接输出到 kafka 成功，验证 ok --&gt;</span><br><span class="line">        &lt;!--&lt;Kafka name=&quot;Kafka&quot; topic=&quot;test_stash&quot;&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;JSONLayout complete=&quot;true&quot; includeStacktrace=&quot;true&quot; locationInfo=&quot;true&quot; compact=&quot;true&quot;/&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;Property name=&quot;bootstrap.servers&quot;&gt;192.168.1.204:9092&lt;/Property&gt;--&gt;</span><br><span class="line">        &lt;!--&lt;/Kafka&gt;--&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--log4j2 logstash-gelf UDP 协议，自动重连 https://github.com/mp911de/logstash-gelf--&gt;</span><br><span class="line">        &lt;Gelf name=&quot;gelf&quot; host=&quot;udp:localhost&quot; port=&quot;12201&quot; version=&quot;1.1&quot; extractStackTrace=&quot;true&quot;</span><br><span class="line">              filterStackTrace=&quot;true&quot; mdcProfiling=&quot;true&quot; includeFullMdc=&quot;true&quot; maximumMessageSize=&quot;8192&quot;</span><br><span class="line">              originHost=&quot;%host&#123;fqdn&#125;&quot; additionalFieldTypes=&quot;fieldName1=String,fieldName2=String&quot;&gt;</span><br><span class="line">            &lt;Field name=&quot;timestamp&quot; pattern=&quot;%d&#123;dd MMM yyyy HH:mm:ss.SSS&#125;&quot;/&gt;</span><br><span class="line">            &lt;Field name=&quot;level&quot; pattern=&quot;%level&quot;/&gt;</span><br><span class="line">            &lt;Field name=&quot;caller_class_name&quot; pattern=&quot;%C&quot;/&gt;</span><br><span class="line">            &lt;Field name=&quot;caller_line_number&quot; pattern=&quot;%L&quot;/&gt;</span><br><span class="line">            &lt;Field name=&quot;caller_method_name&quot; pattern=&quot;%M&quot;/&gt;</span><br><span class="line">            &lt;Field name=&quot;logger_name&quot; pattern=&quot;%c&quot;/&gt;</span><br><span class="line">            &lt;Field name=&quot;thread_name&quot; pattern=&quot;%t&quot;/&gt;</span><br><span class="line">            &lt;!--&lt;Field name=&quot;className&quot; pattern=&quot;%C&quot;/&gt;--&gt;</span><br><span class="line">            &lt;Field name=&quot;server&quot; pattern=&quot;%host&quot;/&gt;</span><br><span class="line">            &lt;Field name=&quot;server.fqdn&quot; pattern=&quot;%host&#123;fqdn&#125;&quot;/&gt;</span><br><span class="line">            &lt;!-- This is a static field --&gt;</span><br><span class="line">            &lt;!--&lt;Field name=&quot;fieldName2&quot; literal=&quot;fieldValue2&quot; /&gt;--&gt;</span><br><span class="line">            &lt;!-- This is a field using MDC --&gt;</span><br><span class="line">            &lt;!--&lt;Field name=&quot;traceId&quot; mdc=&quot;traceId&quot;/&gt;--&gt;</span><br><span class="line">            &lt;!--&lt;Field name=&quot;spanId&quot; mdc=&quot;spanId&quot;/&gt;--&gt;</span><br><span class="line">            &lt;Field name=&quot;app_name&quot; mdc=&quot;$&#123;appName&#125;&quot;/&gt;</span><br><span class="line">            &lt;DynamicMdcFields regex=&quot;mdc.*&quot;/&gt;</span><br><span class="line">            &lt;DynamicMdcFields regex=&quot;(mdc|MDC)fields&quot;/&gt;</span><br><span class="line">        &lt;/Gelf&gt;</span><br><span class="line">    &lt;/Appenders&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Loggers&gt;</span><br><span class="line">        &lt;Root level=&quot;FATAL&quot;&gt; &lt;!-- 全局配置 ALL &gt; TRACE &gt; DEBUG &gt; INFO &gt; WARN &gt; ERROR &gt; FATAL &gt; OFF --&gt;</span><br><span class="line">            &lt;AppenderRef ref=&quot;Console&quot;/&gt;</span><br><span class="line">            &lt;AppenderRef ref=&quot;dailyRollingFile&quot;/&gt;</span><br><span class="line">        &lt;/Root&gt;</span><br><span class="line">        &lt;Logger name=&quot;com.yudianbank&quot; level=&quot;ALL&quot; additivity=&quot;false&quot;&gt;</span><br><span class="line">            &lt;AppenderRef ref=&quot;Console&quot;/&gt;</span><br><span class="line">            &lt;AppenderRef ref=&quot;gelf&quot;/&gt;</span><br><span class="line">            &lt;AppenderRef ref=&quot;dailyRollingFile&quot;/&gt;</span><br><span class="line">        &lt;/Logger&gt;</span><br><span class="line">        &lt;!-- 为sql语句配置特殊的Log级别，方便调试 --&gt;</span><br><span class="line">        &lt;Logger name=&quot;com.p6spy&quot; level=&quot;INFO&quot; additivity=&quot;false&quot;&gt;</span><br><span class="line">            &lt;AppenderRef ref=&quot;Console&quot;/&gt;</span><br><span class="line">            &lt;AppenderRef ref=&quot;dailyRollingFile&quot;/&gt;</span><br><span class="line">        &lt;/Logger&gt;</span><br><span class="line">    &lt;/Loggers&gt;</span><br><span class="line">&lt;/Configuration&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一-日志规约&quot;&gt;&lt;a href=&quot;#一-日志规约&quot; class=&quot;headerlink&quot; title=&quot;一. 日志规约&quot;&gt;&lt;/a&gt;一. 日志规约&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;记日志的目的就是为了快速定位问题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;</summary>
      
    
    
    
    
    <category term="log4j2" scheme="https://engining.net/tags/log4j2/"/>
    
    <category term="logback" scheme="https://engining.net/tags/logback/"/>
    
    <category term="docker" scheme="https://engining.net/tags/docker/"/>
    
    <category term="kafka" scheme="https://engining.net/tags/kafka/"/>
    
    <category term="logstash" scheme="https://engining.net/tags/logstash/"/>
    
  </entry>
  
</feed>
